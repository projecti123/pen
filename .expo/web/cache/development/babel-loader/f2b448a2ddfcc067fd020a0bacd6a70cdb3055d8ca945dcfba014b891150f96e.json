{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOptionalNavigation = exports.useLoadedNavigation = void 0;\nconst native_1 = require(\"@react-navigation/native\");\nconst react_1 = require(\"react\");\nconst router_store_1 = require(\"../global-state/router-store\");\nfunction useLoadedNavigation() {\n  const {\n    navigationRef\n  } = (0, router_store_1.useExpoRouter)();\n  const navigation = (0, native_1.useNavigation)();\n  const isMounted = (0, react_1.useRef)(true);\n  const pending = (0, react_1.useRef)([]);\n  (0, react_1.useEffect)(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const flush = (0, react_1.useCallback)(() => {\n    if (isMounted.current) {\n      const pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach(callback => {\n        callback(navigation);\n      });\n    }\n  }, [navigation]);\n  (0, react_1.useEffect)(() => {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n  const push = (0, react_1.useCallback)(fn => {\n    pending.current.push(fn);\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n  return push;\n}\nexports.useLoadedNavigation = useLoadedNavigation;\nfunction useOptionalNavigation() {\n  const [navigation, setNavigation] = (0, react_1.useState)(null);\n  const loadNavigation = useLoadedNavigation();\n  (0, react_1.useEffect)(() => {\n    loadNavigation(nav => setNavigation(nav));\n  }, []);\n  return navigation;\n}\nexports.useOptionalNavigation = useOptionalNavigation;","map":{"version":3,"names":["native_1","require","react_1","router_store_1","useLoadedNavigation","navigationRef","useExpoRouter","navigation","useNavigation","isMounted","useRef","pending","useEffect","current","flush","useCallback","pendingCallbacks","forEach","callback","push","fn","exports","useOptionalNavigation","setNavigation","useState","loadNavigation","nav"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/link/useLoadedNavigation.ts"],"sourcesContent":["import { NavigationProp, NavigationState, useNavigation } from '@react-navigation/native';\nimport { useCallback, useState, useEffect, useRef } from 'react';\n\nimport { useExpoRouter } from '../global-state/router-store';\n\ntype GenericNavigation = NavigationProp<ReactNavigation.RootParamList> & {\n  getState(): NavigationState | undefined;\n};\n\n/** Returns a callback which is invoked when the navigation state has loaded. */\nexport function useLoadedNavigation() {\n  const { navigationRef } = useExpoRouter();\n  const navigation = useNavigation();\n  const isMounted = useRef(true);\n  const pending = useRef<((navigation: GenericNavigation) => void)[]>([]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const flush = useCallback(() => {\n    if (isMounted.current) {\n      const pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach((callback) => {\n        callback(navigation as GenericNavigation);\n      });\n    }\n  }, [navigation]);\n\n  useEffect(() => {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n\n  const push = useCallback(\n    (fn: (navigation: GenericNavigation) => void) => {\n      pending.current.push(fn);\n      if (navigationRef.current) {\n        flush();\n      }\n    },\n    [flush]\n  );\n\n  return push;\n}\n\nexport function useOptionalNavigation(): GenericNavigation | null {\n  const [navigation, setNavigation] = useState<GenericNavigation | null>(null);\n  const loadNavigation = useLoadedNavigation();\n\n  useEffect(() => {\n    loadNavigation((nav) => setNavigation(nav));\n  }, []);\n\n  return navigation;\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AAEA,MAAAE,cAAA,GAAAF,OAAA;AAOA,SAAgBG,mBAAmBA,CAAA;EACjC,MAAM;IAAEC;EAAa,CAAE,GAAG,IAAAF,cAAA,CAAAG,aAAa,GAAE;EACzC,MAAMC,UAAU,GAAG,IAAAP,QAAA,CAAAQ,aAAa,GAAE;EAClC,MAAMC,SAAS,GAAG,IAAAP,OAAA,CAAAQ,MAAM,EAAC,IAAI,CAAC;EAC9B,MAAMC,OAAO,GAAG,IAAAT,OAAA,CAAAQ,MAAM,EAA8C,EAAE,CAAC;EAEvE,IAAAR,OAAA,CAAAU,SAAS,EAAC,MAAK;IACbH,SAAS,CAACI,OAAO,GAAG,IAAI;IACxB,OAAO,MAAK;MACVJ,SAAS,CAACI,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG,IAAAZ,OAAA,CAAAa,WAAW,EAAC,MAAK;IAC7B,IAAIN,SAAS,CAACI,OAAO,EAAE;MACrB,MAAMG,gBAAgB,GAAGL,OAAO,CAACE,OAAO;MACxCF,OAAO,CAACE,OAAO,GAAG,EAAE;MACpBG,gBAAgB,CAACC,OAAO,CAAEC,QAAQ,IAAI;QACpCA,QAAQ,CAACX,UAA+B,CAAC;MAC3C,CAAC,CAAC;;EAEN,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,IAAAL,OAAA,CAAAU,SAAS,EAAC,MAAK;IACb,IAAIP,aAAa,CAACQ,OAAO,EAAE;MACzBC,KAAK,EAAE;;EAEX,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,IAAI,GAAG,IAAAjB,OAAA,CAAAa,WAAW,EACrBK,EAA2C,IAAI;IAC9CT,OAAO,CAACE,OAAO,CAACM,IAAI,CAACC,EAAE,CAAC;IACxB,IAAIf,aAAa,CAACQ,OAAO,EAAE;MACzBC,KAAK,EAAE;;EAEX,CAAC,EACD,CAACA,KAAK,CAAC,CACR;EAED,OAAOK,IAAI;AACb;AAxCAE,OAAA,CAAAjB,mBAAA,GAAAA,mBAAA;AA0CA,SAAgBkB,qBAAqBA,CAAA;EACnC,MAAM,CAACf,UAAU,EAAEgB,aAAa,CAAC,GAAG,IAAArB,OAAA,CAAAsB,QAAQ,EAA2B,IAAI,CAAC;EAC5E,MAAMC,cAAc,GAAGrB,mBAAmB,EAAE;EAE5C,IAAAF,OAAA,CAAAU,SAAS,EAAC,MAAK;IACba,cAAc,CAAEC,GAAG,IAAKH,aAAa,CAACG,GAAG,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOnB,UAAU;AACnB;AATAc,OAAA,CAAAC,qBAAA,GAAAA,qBAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}