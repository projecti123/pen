{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"style\"];\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/ui/Slot.js\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Slot = void 0;\nconst react_slot_1 = require(\"@radix-ui/react-slot\");\nconst react_1 = require(\"react\");\nconst react_native_1 = require(\"react-native-web/dist/index\");\nfunction ShimSlotForReactNative(Component) {\n  return (0, react_1.forwardRef)(function RNSlotHOC(_ref, ref) {\n    let {\n        style\n      } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    style = (0, react_1.useMemo)(() => react_native_1.StyleSheet.flatten(style), [style]);\n    return _reactJsxDevRuntime.jsxDEV(Component, Object.assign({\n      ref: ref\n    }, props, {\n      style: style\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  });\n}\nexports.Slot = ShimSlotForReactNative(react_slot_1.Slot);","map":{"version":3,"names":["react_slot_1","require","react_1","react_native_1","ShimSlotForReactNative","Component","forwardRef","RNSlotHOC","_ref","ref","style","props","_objectWithoutPropertiesLoose","_excluded","useMemo","StyleSheet","flatten","_reactJsxDevRuntime","jsxDEV","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber","exports","Slot"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/ui/Slot.tsx"],"sourcesContent":["import { Slot as RUISlot } from '@radix-ui/react-slot';\nimport { forwardRef, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\n\n/**\n * RadixUI has special logic to handle the merging of `style` and `className` props.\n * On the web styles are not allowed so Radix does not handle this scenario.\n * This could be fixed upstream (PR open), but it may not as RN is not their target\n * platform.\n *\n * This shim calls `StyleSheet.flatten` on the styles before we render the <Slot />\n *\n * @see https://github.com/expo/expo/issues/31352\n * @see https://github.com/radix-ui/primitives/issues/3107\n * @param Component\n * @returns\n */\nfunction ShimSlotForReactNative(Component: typeof RUISlot): typeof RUISlot {\n  return forwardRef(function RNSlotHOC({ style, ...props }, ref) {\n    style = useMemo(() => StyleSheet.flatten(style), [style]);\n    return <Component ref={ref} {...props} style={style} />;\n  });\n}\n\nexport const Slot = ShimSlotForReactNative(RUISlot);\n"],"mappings":";;;;;;;;;;AAAA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AAA4C,MAAAE,cAAA,GAAAF,OAAA;AAgB5C,SAASG,sBAAsBA,CAACC,SAAyB;EACvD,OAAO,IAAAH,OAAA,CAAAI,UAAU,EAAC,SAASC,SAASA,CAAAC,IAAA,EAAsBC,GAAG;IAAA,IAAxB;QAAEC;MAAe,CAAE,GAAAF,IAAA;MAAPG,KAAK,GAAAC,6BAAA,CAAAJ,IAAA,EAAAK,SAAA;IACpDH,KAAK,GAAG,IAAAR,OAAA,CAAAY,OAAO,EAAC,MAAMX,cAAA,CAAAY,UAAU,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;IACzD,OAAOO,mBAAA,CAAAC,MAAA,CAACb,SAAS,EAAAc,MAAA,CAAAC,MAAA;MAACX,GAAG,EAAEA;IAAI,GAAKE,KAAK;MAAED,KAAK,EAAEA;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACzD,CAAC,CAAC;AACJ;AAEaC,OAAA,CAAAC,IAAI,GAAGtB,sBAAsB,CAACJ,YAAA,CAAA0B,IAAO,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}