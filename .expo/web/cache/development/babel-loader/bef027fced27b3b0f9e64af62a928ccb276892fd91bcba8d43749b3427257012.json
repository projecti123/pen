{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"href\"];\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/layouts/TabsClient.js\";\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tabs = void 0;\nconst bottom_tabs_1 = require(\"@react-navigation/bottom-tabs\");\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native-web/dist/index\");\nconst withLayoutContext_1 = require(\"./withLayoutContext\");\nconst Link_1 = require(\"../link/Link\");\nconst BottomTabNavigator = (0, bottom_tabs_1.createBottomTabNavigator)().Navigator;\nexports.Tabs = (0, withLayoutContext_1.withLayoutContext)(BottomTabNavigator, screens => {\n  return screens.map(screen => {\n    if (typeof screen.options !== 'function' && screen.options?.href !== undefined) {\n      const _screen$options = screen.options,\n        {\n          href\n        } = _screen$options,\n        options = _objectWithoutPropertiesLoose(_screen$options, _excluded);\n      if (options.tabBarButton) {\n        throw new Error('Cannot use `href` and `tabBarButton` together.');\n      }\n      return Object.assign({}, screen, {\n        options: Object.assign({}, options, {\n          tabBarItemStyle: href == null ? {\n            display: 'none'\n          } : options.tabBarItemStyle,\n          tabBarButton: props => {\n            if (href == null) {\n              return null;\n            }\n            const children = react_native_1.Platform.OS === 'web' ? props.children : _reactJsxDevRuntime.jsxDEV(react_native_1.Pressable, {\n              children: props.children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 98\n            }, this);\n            return _reactJsxDevRuntime.jsxDEV(Link_1.Link, Object.assign({}, props, {\n              style: [{\n                display: 'flex'\n              }, props.style],\n              href: href,\n              asChild: react_native_1.Platform.OS !== 'web',\n              children: children\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      });\n    }\n    return screen;\n  });\n});\nexports.default = exports.Tabs;","map":{"version":3,"names":["bottom_tabs_1","require","react_1","__importDefault","react_native_1","withLayoutContext_1","Link_1","BottomTabNavigator","createBottomTabNavigator","Navigator","exports","Tabs","withLayoutContext","screens","map","screen","options","href","undefined","_screen$options","_objectWithoutPropertiesLoose","_excluded","tabBarButton","Error","Object","assign","tabBarItemStyle","display","props","children","Platform","OS","_reactJsxDevRuntime","jsxDEV","Pressable","fileName","_jsxFileName","lineNumber","columnNumber","Link","style","asChild","default"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/layouts/TabsClient.tsx"],"sourcesContent":["'use client';\n\nimport {\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { ParamListBase, TabNavigationState } from '@react-navigation/native';\nimport React from 'react';\nimport { Pressable, Platform } from 'react-native';\n\nimport { withLayoutContext } from './withLayoutContext';\nimport { Link } from '../link/Link';\nimport { Href } from '../types';\n\n// This is the only way to access the navigator.\nconst BottomTabNavigator = createBottomTabNavigator().Navigator;\n\ntype TabsProps = BottomTabNavigationOptions & { href?: Href | null };\n\nexport const Tabs = withLayoutContext<\n  TabsProps,\n  typeof BottomTabNavigator,\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationEventMap\n>(BottomTabNavigator, (screens) => {\n  // Support the `href` shortcut prop.\n  return screens.map((screen) => {\n    if (typeof screen.options !== 'function' && screen.options?.href !== undefined) {\n      const { href, ...options } = screen.options;\n      if (options.tabBarButton) {\n        throw new Error('Cannot use `href` and `tabBarButton` together.');\n      }\n      return {\n        ...screen,\n        options: {\n          ...options,\n          tabBarItemStyle: href == null ? { display: 'none' } : options.tabBarItemStyle,\n          tabBarButton: (props) => {\n            if (href == null) {\n              return null;\n            }\n            const children =\n              Platform.OS === 'web' ? props.children : <Pressable>{props.children}</Pressable>;\n            // TODO: React Navigation types these props as Animated.WithAnimatedValue<StyleProp<ViewStyle>>\n            //       While Link expects a TextStyle. We need to reconcile these types.\n            return (\n              <Link\n                {...(props as any)}\n                style={[{ display: 'flex' }, props.style as any]}\n                href={href}\n                asChild={Platform.OS !== 'web'}\n                children={children}\n              />\n            );\n          },\n        },\n      };\n    }\n    return screen;\n  });\n});\n\nexport default Tabs;\n"],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;AAEZ,MAAAA,aAAA,GAAAC,OAAA;AAMA,MAAAC,OAAA,GAAAC,eAAA,CAAAF,OAAA;AAA0B,MAAAG,cAAA,GAAAH,OAAA;AAG1B,MAAAI,mBAAA,GAAAJ,OAAA;AACA,MAAAK,MAAA,GAAAL,OAAA;AAIA,MAAMM,kBAAkB,GAAG,IAAAP,aAAA,CAAAQ,wBAAwB,GAAE,CAACC,SAAS;AAIlDC,OAAA,CAAAC,IAAI,GAAG,IAAAN,mBAAA,CAAAO,iBAAiB,EAKnCL,kBAAkB,EAAGM,OAAO,IAAI;EAEhC,OAAOA,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAI;IAC5B,IAAI,OAAOA,MAAM,CAACC,OAAO,KAAK,UAAU,IAAID,MAAM,CAACC,OAAO,EAAEC,IAAI,KAAKC,SAAS,EAAE;MAC9E,MAAAC,eAAA,GAA6BJ,MAAM,CAACC,OAAO;QAArC;UAAEC;QAAgB,CAAE,GAAAE,eAAA;QAATH,OAAO,GAAAI,6BAAA,CAAAD,eAAA,EAAAE,SAAA;MACxB,IAAIL,OAAO,CAACM,YAAY,EAAE;QACxB,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;;MAEnE,OAAAC,MAAA,CAAAC,MAAA,KACKV,MAAM;QACTC,OAAO,EAAAQ,MAAA,CAAAC,MAAA,KACFT,OAAO;UACVU,eAAe,EAAET,IAAI,IAAI,IAAI,GAAG;YAAEU,OAAO,EAAE;UAAM,CAAE,GAAGX,OAAO,CAACU,eAAe;UAC7EJ,YAAY,EAAGM,KAAK,IAAI;YACtB,IAAIX,IAAI,IAAI,IAAI,EAAE;cAChB,OAAO,IAAI;;YAEb,MAAMY,QAAQ,GACZzB,cAAA,CAAA0B,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAGH,KAAK,CAACC,QAAQ,GAAGG,mBAAA,CAAAC,MAAA,CAAC7B,cAAA,CAAA8B,SAAS;cAAAL,QAAA,EAAED,KAAK,CAACC;YAAQ;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;YAGlF,OACEN,mBAAA,CAAAC,MAAA,CAAC3B,MAAA,CAAAiC,IAAI,EAAAf,MAAA,CAAAC,MAAA,KACEG,KAAa;cAClBY,KAAK,EAAE,CAAC;gBAAEb,OAAO,EAAE;cAAM,CAAE,EAAEC,KAAK,CAACY,KAAY,CAAE;cACjDvB,IAAI,EAAEA,IAAK;cACXwB,OAAO,EAAErC,cAAA,CAAA0B,QAAQ,CAACC,EAAE,KAAK,KAAM;cAC/BF,QAAQ,EAAEA;YAAS;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnB;UAEN;QAAC;MACF;;IAGL,OAAOvB,MAAM;EACf,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFL,OAAA,CAAAgC,OAAA,GAAehC,OAAA,CAAAC,IAAI","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}