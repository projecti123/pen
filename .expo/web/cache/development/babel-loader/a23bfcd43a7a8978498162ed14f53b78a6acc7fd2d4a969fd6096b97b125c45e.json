{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"direction\", \"theme\", \"linking\", \"fallback\", \"documentTitle\", \"onReady\", \"onStateChange\"];\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/fork/NavigationContainer.js\";\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavigationContainer = void 0;\nconst native_1 = require(\"@react-navigation/native\");\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native-web/dist/index\");\nconst use_latest_callback_1 = __importDefault(require(\"use-latest-callback\"));\nconst useBackButton_1 = require(\"./useBackButton\");\nconst useDocumentTitle_1 = require(\"./useDocumentTitle\");\nconst useLinking_1 = require(\"./useLinking\");\nconst useThenable_1 = require(\"./useThenable\");\nglobalThis.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\nfunction NavigationContainerInner(_ref, ref) {\n  let {\n      direction = react_native_1.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr',\n      theme = native_1.DefaultTheme,\n      linking,\n      fallback = null,\n      documentTitle,\n      onReady,\n      onStateChange\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n  if (linking?.config) {\n    (0, native_1.validatePathConfig)(linking.config);\n  }\n  const refContainer = react_1.default.useRef(null);\n  (0, useBackButton_1.useBackButton)(refContainer);\n  (0, useDocumentTitle_1.useDocumentTitle)(refContainer, documentTitle);\n  const [lastUnhandledLink, setLastUnhandledLink] = react_1.default.useState();\n  const {\n    getInitialState\n  } = (0, useLinking_1.useLinking)(refContainer, Object.assign({\n    enabled: isLinkingEnabled,\n    prefixes: []\n  }, linking), setLastUnhandledLink);\n  const linkingContext = react_1.default.useMemo(() => ({\n    options: linking\n  }), [linking]);\n  const unhandledLinkingContext = react_1.default.useMemo(() => ({\n    lastUnhandledLink,\n    setLastUnhandledLink\n  }), [lastUnhandledLink, setLastUnhandledLink]);\n  const onReadyForLinkingHandling = (0, use_latest_callback_1.default)(() => {\n    const path = refContainer.current?.getCurrentRoute()?.path;\n    setLastUnhandledLink(previousLastUnhandledLink => {\n      if (previousLastUnhandledLink === path) {\n        return undefined;\n      }\n      return previousLastUnhandledLink;\n    });\n    onReady?.();\n  });\n  const onStateChangeForLinkingHandling = (0, use_latest_callback_1.default)(state => {\n    const path = refContainer.current?.getCurrentRoute()?.path;\n    setLastUnhandledLink(previousLastUnhandledLink => {\n      if (previousLastUnhandledLink === path) {\n        return undefined;\n      }\n      return previousLastUnhandledLink;\n    });\n    onStateChange?.(state);\n  });\n  react_1.default.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return Object.assign({}, linking, {\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? native_1.getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? native_1.getPathFromState,\n            getActionFromState: linking?.getActionFromState ?? native_1.getActionFromState\n          });\n        }\n      });\n    }\n  });\n  const [isResolved, initialState] = (0, useThenable_1.useThenable)(getInitialState);\n  react_1.default.useImperativeHandle(ref, () => refContainer.current);\n  const isLinkingReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n  if (!isLinkingReady) {\n    return _reactJsxDevRuntime.jsxDEV(native_1.ThemeProvider, {\n      value: theme,\n      children: fallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n  return _reactJsxDevRuntime.jsxDEV(native_1.LocaleDirContext.Provider, {\n    value: direction,\n    children: _reactJsxDevRuntime.jsxDEV(native_1.UNSTABLE_UnhandledLinkingContext.Provider, {\n      value: unhandledLinkingContext,\n      children: _reactJsxDevRuntime.jsxDEV(native_1.LinkingContext.Provider, {\n        value: linkingContext,\n        children: _reactJsxDevRuntime.jsxDEV(native_1.BaseNavigationContainer, Object.assign({}, rest, {\n          theme: theme,\n          onReady: onReadyForLinkingHandling,\n          onStateChange: onStateChangeForLinkingHandling,\n          initialState: rest.initialState == null ? initialState : rest.initialState,\n          ref: refContainer\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }, this);\n}\nexports.NavigationContainer = react_1.default.forwardRef(NavigationContainerInner);","map":{"version":3,"names":["native_1","require","react_1","__importDefault","react_native_1","use_latest_callback_1","useBackButton_1","useDocumentTitle_1","useLinking_1","useThenable_1","globalThis","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","_ref","ref","direction","I18nManager","getConstants","isRTL","theme","DefaultTheme","linking","fallback","documentTitle","onReady","onStateChange","rest","_objectWithoutPropertiesLoose","_excluded","isLinkingEnabled","enabled","config","validatePathConfig","refContainer","default","useRef","useBackButton","useDocumentTitle","lastUnhandledLink","setLastUnhandledLink","useState","getInitialState","useLinking","Object","assign","prefixes","linkingContext","useMemo","options","unhandledLinkingContext","onReadyForLinkingHandling","path","current","getCurrentRoute","previousLastUnhandledLink","undefined","onStateChangeForLinkingHandling","state","useEffect","set","getStateFromPath","getPathFromState","getActionFromState","isResolved","initialState","useThenable","useImperativeHandle","isLinkingReady","_reactJsxDevRuntime","jsxDEV","ThemeProvider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","LocaleDirContext","Provider","UNSTABLE_UnhandledLinkingContext","LinkingContext","BaseNavigationContainer","exports","NavigationContainer","forwardRef"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/fork/NavigationContainer.tsx"],"sourcesContent":["import {\n  BaseNavigationContainer,\n  DefaultTheme,\n  DocumentTitleOptions,\n  LinkingContext,\n  LinkingOptions,\n  LocaleDirContext,\n  LocaleDirection,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n  ThemeProvider,\n  UNSTABLE_UnhandledLinkingContext as UnhandledLinkingContext,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  validatePathConfig,\n} from '@react-navigation/native';\nimport React from 'react';\nimport { I18nManager } from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { useBackButton } from './useBackButton';\nimport { useDocumentTitle } from './useDocumentTitle';\nimport { useLinking } from './useLinking';\nimport { useThenable } from './useThenable';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobalThis.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends object> = NavigationContainerProps & {\n  direction?: LocaleDirection;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.onUnhandledAction Callback which is called when an action is not handled.\n * @param props.direction Text direction of the components. Defaults to `'ltr'`.\n * @param props.theme Theme object for the UI elements.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    direction = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr',\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    onStateChange,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer = React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const [lastUnhandledLink, setLastUnhandledLink] = React.useState<string | undefined>();\n\n  const { getInitialState } = useLinking(\n    refContainer,\n    {\n      enabled: isLinkingEnabled,\n      prefixes: [],\n      ...linking,\n    },\n    setLastUnhandledLink\n  );\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const unhandledLinkingContext = React.useMemo(\n    () => ({ lastUnhandledLink, setLastUnhandledLink }),\n    [lastUnhandledLink, setLastUnhandledLink]\n  );\n\n  const onReadyForLinkingHandling = useLatestCallback(() => {\n    // If the screen path matches lastUnhandledLink, we do not track it\n    const path = refContainer.current?.getCurrentRoute()?.path;\n    setLastUnhandledLink((previousLastUnhandledLink) => {\n      if (previousLastUnhandledLink === path) {\n        return undefined;\n      }\n      return previousLastUnhandledLink;\n    });\n    onReady?.();\n  });\n\n  const onStateChangeForLinkingHandling = useLatestCallback(\n    (state: Readonly<NavigationState> | undefined) => {\n      // If the screen path matches lastUnhandledLink, we do not track it\n      const path = refContainer.current?.getCurrentRoute()?.path;\n      setLastUnhandledLink((previousLastUnhandledLink) => {\n        if (previousLastUnhandledLink === path) {\n          return undefined;\n        }\n        return previousLastUnhandledLink;\n      });\n      onStateChange?.(state);\n    }\n  );\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState: linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const isLinkingReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  if (!isLinkingReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return <ThemeProvider value={theme}>{fallback}</ThemeProvider>;\n  }\n\n  return (\n    <LocaleDirContext.Provider value={direction}>\n      <UnhandledLinkingContext.Provider value={unhandledLinkingContext}>\n        <LinkingContext.Provider value={linkingContext}>\n          <BaseNavigationContainer\n            {...rest}\n            theme={theme}\n            onReady={onReadyForLinkingHandling}\n            onStateChange={onStateChangeForLinkingHandling}\n            initialState={rest.initialState == null ? initialState : rest.initialState}\n            ref={refContainer}\n          />\n        </LinkingContext.Provider>\n      </UnhandledLinkingContext.Provider>\n    </LocaleDirContext.Provider>\n  );\n}\n\nexport const NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends object = ReactNavigation.RootParamList,\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}