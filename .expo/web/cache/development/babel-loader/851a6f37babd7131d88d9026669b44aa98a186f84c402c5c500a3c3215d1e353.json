{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/Route.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortRoutes = exports.sortRoutesWithInitial = exports.Route = exports.useContextKey = exports.useRouteNode = exports.LocalRouteParamsContext = void 0;\nconst react_1 = __importStar(require(\"react\"));\nconst matchers_1 = require(\"./matchers\");\nconst sortRoutes_1 = require(\"./sortRoutes\");\nObject.defineProperty(exports, \"sortRoutesWithInitial\", {\n  enumerable: true,\n  get: function () {\n    return sortRoutes_1.sortRoutesWithInitial;\n  }\n});\nObject.defineProperty(exports, \"sortRoutes\", {\n  enumerable: true,\n  get: function () {\n    return sortRoutes_1.sortRoutes;\n  }\n});\nconst CurrentRouteContext = react_1.default.createContext(null);\nexports.LocalRouteParamsContext = react_1.default.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  CurrentRouteContext.displayName = 'RouteNode';\n}\nfunction useRouteNode() {\n  return (0, react_1.useContext)(CurrentRouteContext);\n}\nexports.useRouteNode = useRouteNode;\nfunction useContextKey() {\n  const node = useRouteNode();\n  if (node == null) {\n    throw new Error('No filename found. This is likely a bug in expo-router.');\n  }\n  return (0, matchers_1.getContextKey)(node.contextKey);\n}\nexports.useContextKey = useContextKey;\nfunction Route({\n  children,\n  node,\n  route\n}) {\n  return _reactJsxDevRuntime.jsxDEV(exports.LocalRouteParamsContext.Provider, {\n    value: route?.params,\n    children: _reactJsxDevRuntime.jsxDEV(CurrentRouteContext.Provider, {\n      value: node,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\nexports.Route = Route;","map":{"version":3,"names":["react_1","__importStar","require","matchers_1","sortRoutes_1","Object","defineProperty","exports","enumerable","get","sortRoutesWithInitial","sortRoutes","CurrentRouteContext","default","createContext","LocalRouteParamsContext","process","env","NODE_ENV","displayName","useRouteNode","useContext","useContextKey","node","Error","getContextKey","contextKey","Route","children","route","_reactJsxDevRuntime","jsxDEV","Provider","value","params","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/Route.tsx"],"sourcesContent":["'use client';\n\nimport React, { ReactNode, useContext } from 'react';\n\nimport type { ErrorBoundaryProps } from './exports';\nimport { getContextKey } from './matchers';\nimport { sortRoutesWithInitial, sortRoutes } from './sortRoutes';\n\nexport type DynamicConvention = { name: string; deep: boolean; notFound?: boolean };\n\nexport type LoadedRoute = {\n  ErrorBoundary?: React.ComponentType<ErrorBoundaryProps>;\n  default?: React.ComponentType<any>;\n  unstable_settings?: Record<string, any>;\n  getNavOptions?: (args: any) => any;\n  generateStaticParams?: (props: {\n    params?: Record<string, string | string[]>;\n  }) => Record<string, string | string[]>[];\n};\n\nexport type RouteNode = {\n  /** The type of RouteNode */\n  type: 'route' | 'api' | 'layout';\n  /** Load a route into memory. Returns the exports from a route. */\n  loadRoute: () => Partial<LoadedRoute>;\n  /** Loaded initial route name. */\n  initialRouteName?: string;\n  /** nested routes */\n  children: RouteNode[];\n  /** Is the route a dynamic path */\n  dynamic: null | DynamicConvention[];\n  /** `index`, `error-boundary`, etc. */\n  route: string;\n  /** Context Module ID, used for matching children. */\n  contextKey: string;\n  /** Added in-memory */\n  generated?: boolean;\n  /** Internal screens like the directory or the auto 404 should be marked as internal. */\n  internal?: boolean;\n  /** File paths for async entry modules that should be included in the initial chunk request to ensure the runtime JavaScript matches the statically rendered HTML representation. */\n  entryPoints?: string[];\n};\n\nconst CurrentRouteContext = React.createContext<RouteNode | null>(null);\nexport const LocalRouteParamsContext = React.createContext<\n  Record<string, string | undefined> | undefined\n>({});\n\nif (process.env.NODE_ENV !== 'production') {\n  CurrentRouteContext.displayName = 'RouteNode';\n}\n\n/** Return the RouteNode at the current contextual boundary. */\nexport function useRouteNode(): RouteNode | null {\n  return useContext(CurrentRouteContext);\n}\n\nexport function useContextKey(): string {\n  const node = useRouteNode();\n  if (node == null) {\n    throw new Error('No filename found. This is likely a bug in expo-router.');\n  }\n  return getContextKey(node.contextKey);\n}\n\n/** Provides the matching routes and filename to the children. */\nexport function Route({\n  children,\n  node,\n  route,\n}: {\n  children: ReactNode;\n  node: RouteNode;\n  route?: { params: Record<string, string | undefined> };\n}) {\n  return (\n    <LocalRouteParamsContext.Provider value={route?.params}>\n      <CurrentRouteContext.Provider value={node}>{children}</CurrentRouteContext.Provider>\n    </LocalRouteParamsContext.Provider>\n  );\n}\n\nexport { sortRoutesWithInitial, sortRoutes };\n"],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,MAAAA,OAAA,GAAAC,YAAA,CAAAC,OAAA;AAGA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AA4ESG,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OA5EAL,YAAA,CAAAM,qBAAqB;EAAA;AAAA;AA4EEL,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OA5EAL,YAAA,CAAAO,UAAU;EAAA;AAAA;AAqC1C,MAAMC,mBAAmB,GAAGZ,OAAA,CAAAa,OAAK,CAACC,aAAa,CAAmB,IAAI,CAAC;AAC1DP,OAAA,CAAAQ,uBAAuB,GAAGf,OAAA,CAAAa,OAAK,CAACC,aAAa,CAExD,EAAE,CAAC;AAEL,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCN,mBAAmB,CAACO,WAAW,GAAG,WAAW;;AAI/C,SAAgBC,YAAYA,CAAA;EAC1B,OAAO,IAAApB,OAAA,CAAAqB,UAAU,EAACT,mBAAmB,CAAC;AACxC;AAFAL,OAAA,CAAAa,YAAA,GAAAA,YAAA;AAIA,SAAgBE,aAAaA,CAAA;EAC3B,MAAMC,IAAI,GAAGH,YAAY,EAAE;EAC3B,IAAIG,IAAI,IAAI,IAAI,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yDAAyD,CAAC;;EAE5E,OAAO,IAAArB,UAAA,CAAAsB,aAAa,EAACF,IAAI,CAACG,UAAU,CAAC;AACvC;AANAnB,OAAA,CAAAe,aAAA,GAAAA,aAAA;AASA,SAAgBK,KAAKA,CAAC;EACpBC,QAAQ;EACRL,IAAI;EACJM;AAAK,CAKN;EACC,OACEC,mBAAA,CAAAC,MAAA,CAACxB,OAAA,CAAAQ,uBAAuB,CAACiB,QAAQ;IAACC,KAAK,EAAEJ,KAAK,EAAEK,MAAO;IAAAN,QAAA,EACrDE,mBAAA,CAAAC,MAAA,CAACnB,mBAAmB,CAACoB,QAAQ;MAACC,KAAK,EAAEV,IAAK;MAAAK,QAAA,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+B;EACrF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkC,CAAC;AAEvC;AAdA/B,OAAA,CAAAoB,KAAA,GAAAA,KAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}