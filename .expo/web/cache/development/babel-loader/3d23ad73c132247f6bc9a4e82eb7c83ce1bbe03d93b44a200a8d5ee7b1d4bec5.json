{"ast":null,"code":"var _jsxFileName = \"/Users/tanishakumari/StudySphere/components/Input.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Eye, EyeOff } from 'lucide-react-native';\nimport { colors } from \"../constants/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = ({\n  label,\n  placeholder,\n  value,\n  onChangeText,\n  secureTextEntry = false,\n  error,\n  multiline = false,\n  numberOfLines = 1,\n  keyboardType = 'default',\n  autoCapitalize = 'none',\n  style,\n  inputStyle,\n  leftIcon,\n  rightIcon\n}) => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n  return _jsxDEV(View, {\n    style: [styles.container, style],\n    children: [label && _jsxDEV(Text, {\n      style: styles.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), _jsxDEV(View, {\n      style: [styles.inputContainer, error ? styles.inputError : null, multiline ? styles.multiline : null],\n      children: [leftIcon && _jsxDEV(View, {\n        style: styles.iconContainer,\n        children: leftIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this), _jsxDEV(TextInput, {\n        style: [styles.input, leftIcon ? styles.inputWithLeftIcon : null, rightIcon || secureTextEntry ? styles.inputWithRightIcon : null, multiline ? styles.multilineInput : null, inputStyle],\n        placeholder: placeholder,\n        value: value,\n        onChangeText: onChangeText,\n        secureTextEntry: secureTextEntry && !isPasswordVisible,\n        multiline: multiline,\n        numberOfLines: multiline ? numberOfLines : 1,\n        keyboardType: keyboardType,\n        autoCapitalize: autoCapitalize,\n        placeholderTextColor: colors.textTertiary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), secureTextEntry && _jsxDEV(TouchableOpacity, {\n        style: styles.iconContainer,\n        onPress: togglePasswordVisibility,\n        children: _jsxDEV(View, {\n          style: styles.iconWrapper,\n          children: isPasswordVisible ? _jsxDEV(EyeOff, {\n            size: 20,\n            color: colors.textTertiary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this) : _jsxDEV(Eye, {\n            size: 20,\n            color: colors.textTertiary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), rightIcon && !secureTextEntry && _jsxDEV(View, {\n        style: styles.iconContainer,\n        children: rightIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && _jsxDEV(Text, {\n      style: styles.errorText,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: colors.text,\n    marginBottom: 8\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: colors.border,\n    borderRadius: 12,\n    backgroundColor: colors.background\n  },\n  input: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.text\n  },\n  inputWithLeftIcon: {\n    paddingLeft: 8\n  },\n  inputWithRightIcon: {\n    paddingRight: 8\n  },\n  iconContainer: {\n    paddingHorizontal: 12\n  },\n  inputError: {\n    borderColor: colors.error\n  },\n  errorText: {\n    color: colors.error,\n    fontSize: 12,\n    marginTop: 4\n  },\n  multiline: {\n    minHeight: 100\n  },\n  multilineInput: {\n    textAlignVertical: 'top'\n  },\n  iconWrapper: {}\n});","map":{"version":3,"names":["React","useState","View","TextInput","Text","StyleSheet","TouchableOpacity","Eye","EyeOff","colors","jsxDEV","_jsxDEV","Input","label","placeholder","value","onChangeText","secureTextEntry","error","multiline","numberOfLines","keyboardType","autoCapitalize","style","inputStyle","leftIcon","rightIcon","isPasswordVisible","setIsPasswordVisible","togglePasswordVisibility","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","inputError","iconContainer","input","inputWithLeftIcon","inputWithRightIcon","multilineInput","placeholderTextColor","textTertiary","onPress","iconWrapper","size","color","errorText","create","marginBottom","fontSize","fontWeight","text","flexDirection","alignItems","borderWidth","borderColor","border","borderRadius","backgroundColor","background","flex","paddingVertical","paddingHorizontal","paddingLeft","paddingRight","marginTop","minHeight","textAlignVertical"],"sources":["/Users/tanishakumari/StudySphere/components/Input.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Text, StyleSheet, TouchableOpacity, ViewStyle, TextStyle } from 'react-native';\nimport { Eye, EyeOff } from 'lucide-react-native';\nimport { colors } from '@/constants/colors';\n\ninterface InputProps {\n  label?: string;\n  placeholder?: string;\n  value: string;\n  onChangeText: (text: string) => void;\n  secureTextEntry?: boolean;\n  error?: string;\n  multiline?: boolean;\n  numberOfLines?: number;\n  keyboardType?: 'default' | 'email-address' | 'numeric' | 'phone-pad' | 'url';\n  autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\n  style?: ViewStyle;\n  inputStyle?: TextStyle;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  label,\n  placeholder,\n  value,\n  onChangeText,\n  secureTextEntry = false,\n  error,\n  multiline = false,\n  numberOfLines = 1,\n  keyboardType = 'default',\n  autoCapitalize = 'none',\n  style,\n  inputStyle,\n  leftIcon,\n  rightIcon\n}) => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  \n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n  \n  return (\n    <View style={[styles.container, style]}>\n      {label && <Text style={styles.label}>{label}</Text>}\n      \n      <View style={[\n        styles.inputContainer,\n        error ? styles.inputError : null,\n        multiline ? styles.multiline : null\n      ]}>\n        {leftIcon && <View style={styles.iconContainer}>{leftIcon}</View>}\n        \n        <TextInput\n          style={[\n            styles.input,\n            leftIcon ? styles.inputWithLeftIcon : null,\n            (rightIcon || secureTextEntry) ? styles.inputWithRightIcon : null,\n            multiline ? styles.multilineInput : null,\n            inputStyle\n          ]}\n          placeholder={placeholder}\n          value={value}\n          onChangeText={onChangeText}\n          secureTextEntry={secureTextEntry && !isPasswordVisible}\n          multiline={multiline}\n          numberOfLines={multiline ? numberOfLines : 1}\n          keyboardType={keyboardType}\n          autoCapitalize={autoCapitalize}\n          placeholderTextColor={colors.textTertiary}\n        />\n        \n        {secureTextEntry && (\n          <TouchableOpacity \n            style={styles.iconContainer} \n            onPress={togglePasswordVisibility}\n          >\n            <View style={styles.iconWrapper}>\n              {isPasswordVisible ? (\n                <EyeOff size={20} color={colors.textTertiary} />\n              ) : (\n                <Eye size={20} color={colors.textTertiary} />\n              )}\n            </View>\n          </TouchableOpacity>\n        )}\n        \n        {rightIcon && !secureTextEntry && <View style={styles.iconContainer}>{rightIcon}</View>}\n      </View>\n      \n      {error && <Text style={styles.errorText}>{error}</Text>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: colors.text,\n    marginBottom: 8,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: colors.border,\n    borderRadius: 12,\n    backgroundColor: colors.background,\n  },\n  input: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.text,\n  },\n  inputWithLeftIcon: {\n    paddingLeft: 8,\n  },\n  inputWithRightIcon: {\n    paddingRight: 8,\n  },\n  iconContainer: {\n    paddingHorizontal: 12,\n  },\n  inputError: {\n    borderColor: colors.error,\n  },\n  errorText: {\n    color: colors.error,\n    fontSize: 12,\n    marginTop: 4,\n  },\n  multiline: {\n    minHeight: 100,\n  },\n  multilineInput: {\n    textAlignVertical: 'top',\n  },\n  iconWrapper: {\n    // Wrapper to ensure icons are properly contained\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}