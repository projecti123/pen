{"ast":null,"code":"var _jsxFileName = \"/Users/tanishakumari/StudySphere/components/AdModal.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Button } from \"./Button\";\nimport { colors } from \"../constants/colors\";\nimport { useEarningsStore } from \"../store/earnings-store\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AdModal = ({\n  visible,\n  onClose,\n  onAdComplete,\n  noteId,\n  noteName\n}) => {\n  const [adState, setAdState] = useState('loading');\n  const [progress, setProgress] = useState(0);\n  const {\n    addEarning\n  } = useEarningsStore();\n  useEffect(() => {\n    if (visible) {\n      setAdState('loading');\n      setProgress(0);\n      const loadingTimeout = setTimeout(() => {\n        setAdState('playing');\n        startAdProgress();\n      }, 1500);\n      return () => clearTimeout(loadingTimeout);\n    }\n  }, [visible]);\n  const startAdProgress = () => {\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        const newProgress = prev + 2;\n        if (newProgress >= 100) {\n          clearInterval(interval);\n          setAdState('completed');\n          if (noteId && noteName) {\n            addEarning({\n              amount: 2.50,\n              type: 'ad_view',\n              noteId,\n              noteName\n            });\n          }\n          return 100;\n        }\n        return newProgress;\n      });\n    }, 100);\n  };\n  const handleComplete = () => {\n    onAdComplete();\n    onClose();\n  };\n  return _jsxDEV(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsxDEV(View, {\n      style: styles.overlay,\n      children: _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Watch Ad to Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.adContainer,\n          children: adState === 'loading' ? _jsxDEV(View, {\n            style: styles.loadingContainer,\n            children: [_jsxDEV(ActivityIndicator, {\n              size: \"large\",\n              color: colors.primary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.loadingText,\n              children: \"Loading ad...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this) : _jsxDEV(_Fragment, {\n            children: [_jsxDEV(Image, {\n              source: {\n                uri: 'https://images.unsplash.com/photo-1611162617213-7d7a39e9b1d7'\n              },\n              style: styles.adImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.progressContainer,\n              children: _jsxDEV(View, {\n                style: [styles.progressBar, {\n                  width: `${progress}%`\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.adText,\n              children: adState === 'completed' ? 'Ad completed! You can now download the note.' : 'Please watch the entire ad to download the note.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.buttonContainer,\n          children: adState === 'completed' ? _jsxDEV(Button, {\n            title: \"Download Now\",\n            onPress: handleComplete,\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this) : _jsxDEV(Button, {\n            title: \"Cancel\",\n            onPress: onClose,\n            variant: \"outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  container: {\n    backgroundColor: colors.background,\n    borderRadius: 16,\n    padding: 20,\n    width: '100%',\n    maxWidth: 400\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: colors.text,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  adContainer: {\n    marginVertical: 16,\n    alignItems: 'center'\n  },\n  loadingContainer: {\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 12,\n    color: colors.textSecondary\n  },\n  adImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  progressContainer: {\n    width: '100%',\n    height: 6,\n    backgroundColor: colors.border,\n    borderRadius: 3,\n    overflow: 'hidden',\n    marginBottom: 16\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: colors.primary\n  },\n  adText: {\n    textAlign: 'center',\n    color: colors.textSecondary,\n    marginBottom: 8\n  },\n  buttonContainer: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Modal","View","Text","StyleSheet","Image","ActivityIndicator","Button","colors","useEarningsStore","jsxDEV","_jsxDEV","Fragment","_Fragment","AdModal","visible","onClose","onAdComplete","noteId","noteName","adState","setAdState","progress","setProgress","addEarning","loadingTimeout","setTimeout","startAdProgress","clearTimeout","interval","setInterval","prev","newProgress","clearInterval","amount","type","handleComplete","transparent","animationType","onRequestClose","children","style","styles","overlay","container","title","fileName","_jsxFileName","lineNumber","columnNumber","adContainer","loadingContainer","size","color","primary","loadingText","source","uri","adImage","progressContainer","progressBar","width","adText","buttonContainer","onPress","variant","create","flex","backgroundColor","justifyContent","alignItems","padding","background","borderRadius","maxWidth","fontSize","fontWeight","text","marginBottom","textAlign","marginVertical","height","marginTop","textSecondary","border","overflow"],"sources":["/Users/tanishakumari/StudySphere/components/AdModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, View, Text, StyleSheet, Image, ActivityIndicator } from 'react-native';\nimport { Button } from './Button';\nimport { colors } from '@/constants/colors';\nimport { useEarningsStore } from '@/store/earnings-store';\n\ninterface AdModalProps {\n  visible: boolean;\n  onClose: () => void;\n  onAdComplete: () => void;\n  noteId?: string;\n  noteName?: string;\n}\n\nexport const AdModal: React.FC<AdModalProps> = ({ \n  visible, \n  onClose, \n  onAdComplete,\n  noteId,\n  noteName\n}) => {\n  const [adState, setAdState] = useState<'loading' | 'playing' | 'completed'>('loading');\n  const [progress, setProgress] = useState(0);\n  const { addEarning } = useEarningsStore();\n  \n  useEffect(() => {\n    if (visible) {\n      setAdState('loading');\n      setProgress(0);\n      \n      // Simulate ad loading\n      const loadingTimeout = setTimeout(() => {\n        setAdState('playing');\n        startAdProgress();\n      }, 1500);\n      \n      return () => clearTimeout(loadingTimeout);\n    }\n  }, [visible]);\n  \n  const startAdProgress = () => {\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        const newProgress = prev + 2;\n        \n        if (newProgress >= 100) {\n          clearInterval(interval);\n          setAdState('completed');\n          \n          // Add earnings for watching the ad\n          if (noteId && noteName) {\n            addEarning({\n              amount: 2.50, // Mock amount\n              type: 'ad_view',\n              noteId,\n              noteName\n            });\n          }\n          \n          return 100;\n        }\n        \n        return newProgress;\n      });\n    }, 100);\n  };\n  \n  const handleComplete = () => {\n    onAdComplete();\n    onClose();\n  };\n  \n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.overlay}>\n        <View style={styles.container}>\n          <Text style={styles.title}>Watch Ad to Download</Text>\n          \n          <View style={styles.adContainer}>\n            {adState === 'loading' ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={colors.primary} />\n                <Text style={styles.loadingText}>Loading ad...</Text>\n              </View>\n            ) : (\n              <>\n                <Image \n                  source={{ uri: 'https://images.unsplash.com/photo-1611162617213-7d7a39e9b1d7' }} \n                  style={styles.adImage} \n                />\n                \n                <View style={styles.progressContainer}>\n                  <View style={[styles.progressBar, { width: `${progress}%` }]} />\n                </View>\n                \n                <Text style={styles.adText}>\n                  {adState === 'completed' \n                    ? 'Ad completed! You can now download the note.' \n                    : 'Please watch the entire ad to download the note.'}\n                </Text>\n              </>\n            )}\n          </View>\n          \n          <View style={styles.buttonContainer}>\n            {adState === 'completed' ? (\n              <Button \n                title=\"Download Now\" \n                onPress={handleComplete} \n                variant=\"primary\" \n              />\n            ) : (\n              <Button \n                title=\"Cancel\" \n                onPress={onClose} \n                variant=\"outline\" \n              />\n            )}\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  container: {\n    backgroundColor: colors.background,\n    borderRadius: 16,\n    padding: 20,\n    width: '100%',\n    maxWidth: 400,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: colors.text,\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  adContainer: {\n    marginVertical: 16,\n    alignItems: 'center',\n  },\n  loadingContainer: {\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 12,\n    color: colors.textSecondary,\n  },\n  adImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  progressContainer: {\n    width: '100%',\n    height: 6,\n    backgroundColor: colors.border,\n    borderRadius: 3,\n    overflow: 'hidden',\n    marginBottom: 16,\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: colors.primary,\n  },\n  adText: {\n    textAlign: 'center',\n    color: colors.textSecondary,\n    marginBottom: 8,\n  },\n  buttonContainer: {\n    alignItems: 'center',\n  }\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAEnD,SAASC,MAAM;AACf,SAASC,MAAM;AACf,SAASC,gBAAgB;AAAiC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAU1D,OAAO,MAAMC,OAA+B,GAAGA,CAAC;EAC9CC,OAAO;EACPC,OAAO;EACPC,YAAY;EACZC,MAAM;EACNC;AACF,CAAC,KAAK;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAsC,SAAS,CAAC;EACtF,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM;IAAEyB;EAAW,CAAC,GAAGf,gBAAgB,CAAC,CAAC;EAEzCT,SAAS,CAAC,MAAM;IACd,IAAIe,OAAO,EAAE;MACXM,UAAU,CAAC,SAAS,CAAC;MACrBE,WAAW,CAAC,CAAC,CAAC;MAGd,MAAME,cAAc,GAAGC,UAAU,CAAC,MAAM;QACtCL,UAAU,CAAC,SAAS,CAAC;QACrBM,eAAe,CAAC,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMC,YAAY,CAACH,cAAc,CAAC;IAC3C;EACF,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EAEb,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCP,WAAW,CAACQ,IAAI,IAAI;QAClB,MAAMC,WAAW,GAAGD,IAAI,GAAG,CAAC;QAE5B,IAAIC,WAAW,IAAI,GAAG,EAAE;UACtBC,aAAa,CAACJ,QAAQ,CAAC;UACvBR,UAAU,CAAC,WAAW,CAAC;UAGvB,IAAIH,MAAM,IAAIC,QAAQ,EAAE;YACtBK,UAAU,CAAC;cACTU,MAAM,EAAE,IAAI;cACZC,IAAI,EAAE,SAAS;cACfjB,MAAM;cACNC;YACF,CAAC,CAAC;UACJ;UAEA,OAAO,GAAG;QACZ;QAEA,OAAOa,WAAW;MACpB,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BnB,YAAY,CAAC,CAAC;IACdD,OAAO,CAAC,CAAC;EACX,CAAC;EAED,OACEL,OAAA,CAACV,KAAK;IACJc,OAAO,EAAEA,OAAQ;IACjBsB,WAAW,EAAE,IAAK;IAClBC,aAAa,EAAC,MAAM;IACpBC,cAAc,EAAEvB,OAAQ;IAAAwB,QAAA,EAExB7B,OAAA,CAACT,IAAI;MAACuC,KAAK,EAAEC,MAAM,CAACC,OAAQ;MAAAH,QAAA,EAC1B7B,OAAA,CAACT,IAAI;QAACuC,KAAK,EAAEC,MAAM,CAACE,SAAU;QAAAJ,QAAA,GAC5B7B,OAAA,CAACR,IAAI;UAACsC,KAAK,EAAEC,MAAM,CAACG,KAAM;UAAAL,QAAA,EAAC;QAAoB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAEtDtC,OAAA,CAACT,IAAI;UAACuC,KAAK,EAAEC,MAAM,CAACQ,WAAY;UAAAV,QAAA,EAC7BpB,OAAO,KAAK,SAAS,GACpBT,OAAA,CAACT,IAAI;YAACuC,KAAK,EAAEC,MAAM,CAACS,gBAAiB;YAAAX,QAAA,GACnC7B,OAAA,CAACL,iBAAiB;cAAC8C,IAAI,EAAC,OAAO;cAACC,KAAK,EAAE7C,MAAM,CAAC8C;YAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACzDtC,OAAA,CAACR,IAAI;cAACsC,KAAK,EAAEC,MAAM,CAACa,WAAY;cAAAf,QAAA,EAAC;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,GAEPtC,OAAA,CAAAE,SAAA;YAAA2B,QAAA,GACE7B,OAAA,CAACN,KAAK;cACJmD,MAAM,EAAE;gBAAEC,GAAG,EAAE;cAA+D,CAAE;cAChFhB,KAAK,EAAEC,MAAM,CAACgB;YAAQ;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,EAEFtC,OAAA,CAACT,IAAI;cAACuC,KAAK,EAAEC,MAAM,CAACiB,iBAAkB;cAAAnB,QAAA,EACpC7B,OAAA,CAACT,IAAI;gBAACuC,KAAK,EAAE,CAACC,MAAM,CAACkB,WAAW,EAAE;kBAAEC,KAAK,EAAE,GAAGvC,QAAQ;gBAAI,CAAC;cAAE;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,EAEPtC,OAAA,CAACR,IAAI;cAACsC,KAAK,EAAEC,MAAM,CAACoB,MAAO;cAAAtB,QAAA,EACxBpB,OAAO,KAAK,WAAW,GACpB,8CAA8C,GAC9C;YAAkD;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA,eACP;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,EAEPtC,OAAA,CAACT,IAAI;UAACuC,KAAK,EAAEC,MAAM,CAACqB,eAAgB;UAAAvB,QAAA,EACjCpB,OAAO,KAAK,WAAW,GACtBT,OAAA,CAACJ,MAAM;YACLsC,KAAK,EAAC,cAAc;YACpBmB,OAAO,EAAE5B,cAAe;YACxB6B,OAAO,EAAC;UAAS;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,GAEFtC,OAAA,CAACJ,MAAM;YACLsC,KAAK,EAAC,QAAQ;YACdmB,OAAO,EAAEhD,OAAQ;YACjBiD,OAAO,EAAC;UAAS;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAED,MAAMP,MAAM,GAAGtC,UAAU,CAAC8D,MAAM,CAAC;EAC/BvB,OAAO,EAAE;IACPwB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,oBAAoB;IACrCC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACD3B,SAAS,EAAE;IACTwB,eAAe,EAAE5D,MAAM,CAACgE,UAAU;IAClCC,YAAY,EAAE,EAAE;IAChBF,OAAO,EAAE,EAAE;IACXV,KAAK,EAAE,MAAM;IACba,QAAQ,EAAE;EACZ,CAAC;EACD7B,KAAK,EAAE;IACL8B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBvB,KAAK,EAAE7C,MAAM,CAACqE,IAAI;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACD7B,WAAW,EAAE;IACX8B,cAAc,EAAE,EAAE;IAClBV,UAAU,EAAE;EACd,CAAC;EACDnB,gBAAgB,EAAE;IAChB8B,MAAM,EAAE,GAAG;IACXZ,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDf,WAAW,EAAE;IACX2B,SAAS,EAAE,EAAE;IACb7B,KAAK,EAAE7C,MAAM,CAAC2E;EAChB,CAAC;EACDzB,OAAO,EAAE;IACPG,KAAK,EAAE,MAAM;IACboB,MAAM,EAAE,GAAG;IACXR,YAAY,EAAE,CAAC;IACfK,YAAY,EAAE;EAChB,CAAC;EACDnB,iBAAiB,EAAE;IACjBE,KAAK,EAAE,MAAM;IACboB,MAAM,EAAE,CAAC;IACTb,eAAe,EAAE5D,MAAM,CAAC4E,MAAM;IAC9BX,YAAY,EAAE,CAAC;IACfY,QAAQ,EAAE,QAAQ;IAClBP,YAAY,EAAE;EAChB,CAAC;EACDlB,WAAW,EAAE;IACXqB,MAAM,EAAE,MAAM;IACdb,eAAe,EAAE5D,MAAM,CAAC8C;EAC1B,CAAC;EACDQ,MAAM,EAAE;IACNiB,SAAS,EAAE,QAAQ;IACnB1B,KAAK,EAAE7C,MAAM,CAAC2E,aAAa;IAC3BL,YAAY,EAAE;EAChB,CAAC;EACDf,eAAe,EAAE;IACfO,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}