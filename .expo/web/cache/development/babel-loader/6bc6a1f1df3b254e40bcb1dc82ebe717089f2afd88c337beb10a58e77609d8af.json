{"ast":null,"code":"import { requireNativeModule } from 'expo-modules-core';\nconst NativeExpoGoModule = (() => {\n  try {\n    return requireNativeModule('ExpoGo');\n  } catch {\n    return null;\n  }\n})();\nexport function isRunningInExpoGo() {\n  return NativeExpoGoModule != null;\n}\nexport function getExpoGoProjectConfig() {\n  return NativeExpoGoModule?.projectConfig ?? null;\n}","map":{"version":3,"names":["requireNativeModule","NativeExpoGoModule","isRunningInExpoGo","getExpoGoProjectConfig","projectConfig"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo/src/environment/ExpoGo.ts"],"sourcesContent":["import { requireNativeModule } from 'expo-modules-core';\n\ntype ExpoGoModule = {\n  expoVersion: string;\n  projectConfig: ExpoGoProjectConfig;\n};\n\ntype ExpoGoProjectConfig = {\n  mainModuleName?: string;\n  debuggerHost?: string;\n  logUrl?: string;\n  developer?: {\n    tool?: string;\n    [key: string]: any;\n  };\n  packagerOpts?: ExpoGoPackagerOpts;\n};\n\nexport type ExpoGoPackagerOpts = {\n  hostType?: string;\n  dev?: boolean;\n  strict?: boolean;\n  minify?: boolean;\n  urlType?: string;\n  urlRandomness?: string;\n  lanType?: string;\n  [key: string]: any;\n};\n\n// ExpoGo module is available only when the app is run in Expo Go,\n// otherwise we use `null` instead of throwing an error.\nconst NativeExpoGoModule = ((): ExpoGoModule | null => {\n  try {\n    return requireNativeModule('ExpoGo');\n  } catch {\n    return null;\n  }\n})();\n\n/**\n * Returns a boolean value whether the app is running in Expo Go.\n */\nexport function isRunningInExpoGo(): boolean {\n  return NativeExpoGoModule != null;\n}\n\n/**\n * @hidden\n * Returns an Expo Go project config from the manifest or `null` if the app is not running in Expo Go.\n */\nexport function getExpoGoProjectConfig(): ExpoGoProjectConfig | null {\n  return NativeExpoGoModule?.projectConfig ?? null;\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AA+BvD,MAAMC,kBAAkB,GAAG,CAAC,MAA2B;EACrD,IAAI;IACF,OAAOD,mBAAmB,CAAC,QAAQ,CAAC;EACtC,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF,CAAC,EAAE,CAAC;AAKJ,OAAO,SAASE,iBAAiBA,CAAA,EAAY;EAC3C,OAAOD,kBAAkB,IAAI,IAAI;AACnC;AAMA,OAAO,SAASE,sBAAsBA,CAAA,EAA+B;EACnE,OAAOF,kBAAkB,EAAEG,aAAa,IAAI,IAAI;AAClD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}