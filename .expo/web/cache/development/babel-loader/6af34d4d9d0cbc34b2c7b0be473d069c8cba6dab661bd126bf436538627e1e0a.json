{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"children\"];\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/layouts/withLayoutContext.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withLayoutContext = exports.useFilterScreenChildren = void 0;\nconst react_1 = __importStar(require(\"react\"));\nconst Route_1 = require(\"../Route\");\nconst useScreens_1 = require(\"../useScreens\");\nconst Screen_1 = require(\"../views/Screen\");\nfunction useFilterScreenChildren(children, {\n  isCustomNavigator,\n  contextKey\n} = {}) {\n  return (0, react_1.useMemo)(() => {\n    const customChildren = [];\n    const screens = react_1.Children.map(children, child => {\n      if ((0, react_1.isValidElement)(child) && child && child.type === Screen_1.Screen) {\n        if (!child.props.name) {\n          throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (['children', 'component', 'getComponent'].some(key => key in child.props)) {\n            throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`);\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(`Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`);\n        }\n      }\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      const names = screens?.map(screen => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n    return {\n      screens,\n      children: customChildren\n    };\n  }, [children]);\n}\nexports.useFilterScreenChildren = useFilterScreenChildren;\nfunction withLayoutContext(Nav, processor) {\n  return Object.assign((0, react_1.forwardRef)((_ref, ref) => {\n    let {\n        children: userDefinedChildren\n      } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const contextKey = (0, Route_1.useContextKey)();\n    const {\n      screens\n    } = useFilterScreenChildren(userDefinedChildren, {\n      contextKey\n    });\n    const processed = processor ? processor(screens ?? []) : screens;\n    const sorted = (0, useScreens_1.useSortedScreens)(processed ?? []);\n    if (!sorted.length) {\n      return null;\n    }\n    return _reactJsxDevRuntime.jsxDEV(Nav, Object.assign({}, props, {\n      id: contextKey,\n      ref: ref,\n      children: sorted\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }), {\n    Screen: Screen_1.Screen\n  });\n}\nexports.withLayoutContext = withLayoutContext;","map":{"version":3,"names":["react_1","__importStar","require","Route_1","useScreens_1","Screen_1","useFilterScreenChildren","children","isCustomNavigator","contextKey","useMemo","customChildren","screens","Children","map","child","isValidElement","type","Screen","props","name","Error","process","env","NODE_ENV","some","key","push","console","warn","names","screen","Set","size","length","exports","withLayoutContext","Nav","processor","Object","assign","forwardRef","_ref","ref","userDefinedChildren","_objectWithoutPropertiesLoose","_excluded","useContextKey","processed","sorted","useSortedScreens","_reactJsxDevRuntime","jsxDEV","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/layouts/withLayoutContext.tsx"],"sourcesContent":["import { EventMapBase, NavigationState } from '@react-navigation/native';\nimport React, {\n  Children,\n  forwardRef,\n  ComponentProps,\n  ComponentType,\n  ForwardRefExoticComponent,\n  PropsWithoutRef,\n  ReactNode,\n  RefAttributes,\n  isValidElement,\n  useMemo,\n} from 'react';\n\nimport { useContextKey } from '../Route';\nimport { PickPartial } from '../types';\nimport { useSortedScreens, ScreenProps } from '../useScreens';\nimport { Screen } from '../views/Screen';\n\nexport function useFilterScreenChildren(\n  children: ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return useMemo(() => {\n    const customChildren: any[] = [];\n    const screens = Children.map(children, (child) => {\n      if (isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n          );\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (['children', 'component', 'getComponent'].some((key) => key in child.props)) {\n            throw new Error(\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n            );\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n          );\n        }\n      }\n    });\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== 'production') {\n      // Assert if names are not unique\n      const names = screens?.map((screen) => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n    };\n  }, [children]);\n}\n\n/**\n * Returns a navigator that automatically injects matched routes and renders nothing when there are no children.\n * Return type with `children` prop optional.\n */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends ComponentType<any>,\n  TState extends NavigationState,\n  TEventMap extends EventMapBase,\n>(\n  Nav: T,\n  processor?: (\n    options: ScreenProps<TOptions, TState, TEventMap>[]\n  ) => ScreenProps<TOptions, TState, TEventMap>[]\n) {\n  return Object.assign(\n    forwardRef(({ children: userDefinedChildren, ...props }: any, ref) => {\n      const contextKey = useContextKey();\n\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? []);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return <Nav {...props} id={contextKey} ref={ref} children={sorted} />;\n    }),\n    {\n      Screen,\n    }\n  ) as ForwardRefExoticComponent<\n    PropsWithoutRef<PickPartial<ComponentProps<T>, 'children'>> & RefAttributes<unknown>\n  > & {\n    Screen: (props: ScreenProps<TOptions, TState, TEventMap>) => null;\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}