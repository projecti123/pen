{"ast":null,"code":"import './winter';\nimport 'expo-asset';\nimport Constants from 'expo-constants';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { isRunningInExpoGo } from './environment/ExpoGo';\nimport { AppEntryNotFound } from './errors/AppEntryNotFound';\nimport { createErrorHandler } from './errors/ExpoErrorManager';\nif (isRunningInExpoGo()) {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  ErrorUtils.setGlobalHandler(createErrorHandler(globalHandler));\n}\nif (__DEV__ && isRunningInExpoGo() && process.env.NODE_ENV === 'development') {\n  ['android', 'ios'].forEach(platform => {\n    if (Platform.OS === platform && Constants.expoConfig?.[platform]?.newArchEnabled !== true && Constants.expoConfig?.newArchEnabled !== true) {\n      requestAnimationFrame(() => {\n        console.warn(`ðŸš¨ React Native's New Architecture is always enabled in Expo Go, but it is not explicitly enabled your project app config. This may lead to unexpected behavior when you create a production or development build. Set \"newArchEnabled\": true in your app.json.\\nLearn more: https://docs.expo.dev/guides/new-architecture/`);\n      });\n    }\n  });\n}\nconst IS_RUNNING_IN_DEV_CLIENT = !!NativeModules.EXDevLauncher;\nif (__DEV__ && LogBox?.ignoreLogs && (isRunningInExpoGo() || IS_RUNNING_IN_DEV_CLIENT)) {\n  LogBox.ignoreLogs([/Open debugger to view warnings/]);\n}\nif (process.env.NODE_ENV !== 'production') {\n  AppRegistry.registerComponent('main', () => AppEntryNotFound);\n}","map":{"version":3,"names":["Constants","AppRegistry","NativeModules","LogBox","Platform","isRunningInExpoGo","AppEntryNotFound","createErrorHandler","globalHandler","ErrorUtils","getGlobalHandler","setGlobalHandler","__DEV__","process","env","NODE_ENV","forEach","platform","OS","expoConfig","newArchEnabled","requestAnimationFrame","console","warn","IS_RUNNING_IN_DEV_CLIENT","EXDevLauncher","ignoreLogs","registerComponent"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo/src/Expo.fx.tsx"],"sourcesContent":["// load expo-asset immediately to set a custom `source` transformer in React Native\nimport './winter';\nimport 'expo-asset';\n\nimport Constants from 'expo-constants';\nimport { AppRegistry, NativeModules, LogBox, Platform } from 'react-native';\n\nimport { isRunningInExpoGo } from './environment/ExpoGo';\nimport { AppEntryNotFound } from './errors/AppEntryNotFound';\nimport { createErrorHandler } from './errors/ExpoErrorManager';\n\nif (isRunningInExpoGo()) {\n  // set up some improvements to commonly logged error messages stemming from react-native\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  ErrorUtils.setGlobalHandler(createErrorHandler(globalHandler));\n}\n\n// Warn if the New Architecture is not explicitly enabled in the app config and we are running in Expo Go.\n// This could be problematic because you will be developing your app with the New Architecture enabled and\n// but your builds will have the New Architecture disabled.\nif (__DEV__ && isRunningInExpoGo() && process.env.NODE_ENV === 'development') {\n  ['android', 'ios'].forEach((platform) => {\n    if (\n      Platform.OS === platform &&\n      Constants.expoConfig?.[platform]?.newArchEnabled !== true &&\n      Constants.expoConfig?.newArchEnabled !== true\n    ) {\n      // Wrap it in rAF to show the warning after the React Native DevTools message\n      requestAnimationFrame(() => {\n        console.warn(\n          `ðŸš¨ React Native's New Architecture is always enabled in Expo Go, but it is not explicitly enabled your project app config. This may lead to unexpected behavior when you create a production or development build. Set \"newArchEnabled\": true in your app.json.\\nLearn more: https://docs.expo.dev/guides/new-architecture/`\n        );\n      });\n    }\n  });\n}\n\n// Disable the \"Open debugger to view warnings\" React Native DevTools warning in\n// Expo Go and expo-dev-client, because launching the debugger from there will not\n// get the correct JS target.\nconst IS_RUNNING_IN_DEV_CLIENT = !!NativeModules.EXDevLauncher;\nif (__DEV__ && LogBox?.ignoreLogs && (isRunningInExpoGo() || IS_RUNNING_IN_DEV_CLIENT)) {\n  LogBox.ignoreLogs([/Open debugger to view warnings/]);\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // Register a default component and expect `registerRootComponent` to be called later and update it.\n  AppRegistry.registerComponent('main', () => AppEntryNotFound);\n}\n"],"mappings":"AACA,OAAO,UAAU;AACjB,OAAO,YAAY;AAEnB,OAAOA,SAAS,MAAM,gBAAgB;AAAC,OAAAC,WAAA;AAAA,OAAAC,aAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAGvC,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,IAAIF,iBAAiB,CAAC,CAAC,EAAE;EAEvB,MAAMG,aAAa,GAAGC,UAAU,CAACC,gBAAgB,CAAC,CAAC;EACnDD,UAAU,CAACE,gBAAgB,CAACJ,kBAAkB,CAACC,aAAa,CAAC,CAAC;AAChE;AAKA,IAAII,OAAO,IAAIP,iBAAiB,CAAC,CAAC,IAAIQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EAC5E,CAAC,SAAS,EAAE,KAAK,CAAC,CAACC,OAAO,CAAEC,QAAQ,IAAK;IACvC,IACEb,QAAQ,CAACc,EAAE,KAAKD,QAAQ,IACxBjB,SAAS,CAACmB,UAAU,GAAGF,QAAQ,CAAC,EAAEG,cAAc,KAAK,IAAI,IACzDpB,SAAS,CAACmB,UAAU,EAAEC,cAAc,KAAK,IAAI,EAC7C;MAEAC,qBAAqB,CAAC,MAAM;QAC1BC,OAAO,CAACC,IAAI,CACV,6TACF,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAKA,MAAMC,wBAAwB,GAAG,CAAC,CAACtB,aAAa,CAACuB,aAAa;AAC9D,IAAIb,OAAO,IAAIT,MAAM,EAAEuB,UAAU,KAAKrB,iBAAiB,CAAC,CAAC,IAAImB,wBAAwB,CAAC,EAAE;EACtFrB,MAAM,CAACuB,UAAU,CAAC,CAAC,gCAAgC,CAAC,CAAC;AACvD;AAEA,IAAIb,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EAEzCd,WAAW,CAAC0B,iBAAiB,CAAC,MAAM,EAAE,MAAMrB,gBAAgB,CAAC;AAC/D","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}