{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"href\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHandleMouseEvent = void 0;\nconst react_native_1 = require(\"react-native-web/dist/index\");\nconst router_store_1 = require(\"../global-state/router-store\");\nconst matchers_1 = require(\"../matchers\");\nconst useDomComponentNavigation_1 = require(\"./useDomComponentNavigation\");\nconst getPathFromState_forks_1 = require(\"../fork/getPathFromState-forks\");\nconst url_1 = require(\"../utils/url\");\nfunction eventShouldPreventDefault(e) {\n  if (e?.defaultPrevented) {\n    return false;\n  }\n  if ('button' in e && !e.metaKey && !e.altKey && !e.ctrlKey && !e.shiftKey && (e.button == null || e.button === 0) && [undefined, null, '', 'self'].includes(e.currentTarget.target)) {\n    return true;\n  }\n  return false;\n}\nfunction useLinkToPathProps(_ref) {\n  let {\n      href\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    linkTo\n  } = (0, router_store_1.useExpoRouter)();\n  const onPress = event => {\n    if (shouldHandleMouseEvent(event)) {\n      if ((0, useDomComponentNavigation_1.emitDomLinkEvent)(href, options)) {\n        return;\n      }\n      linkTo(href, options);\n    }\n  };\n  let strippedHref = (0, matchers_1.stripGroupSegmentsFromPath)(href) || '/';\n  if (!(0, url_1.shouldLinkExternally)(strippedHref)) {\n    strippedHref = (0, getPathFromState_forks_1.appendBaseUrl)(strippedHref);\n  }\n  return {\n    href: strippedHref,\n    role: 'link',\n    onPress\n  };\n}\nexports.default = useLinkToPathProps;\nfunction shouldHandleMouseEvent(event) {\n  if (react_native_1.Platform.OS !== 'web') {\n    return !event?.defaultPrevented;\n  }\n  if (event && eventShouldPreventDefault(event)) {\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\nexports.shouldHandleMouseEvent = shouldHandleMouseEvent;","map":{"version":3,"names":["router_store_1","require","matchers_1","useDomComponentNavigation_1","getPathFromState_forks_1","url_1","eventShouldPreventDefault","e","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","undefined","includes","currentTarget","target","useLinkToPathProps","_ref","href","options","_objectWithoutPropertiesLoose","_excluded","linkTo","useExpoRouter","onPress","event","shouldHandleMouseEvent","emitDomLinkEvent","strippedHref","stripGroupSegmentsFromPath","shouldLinkExternally","appendBaseUrl","role","exports","default","react_native_1","Platform","OS","preventDefault"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/link/useLinkToPathProps.tsx"],"sourcesContent":["import { MouseEvent } from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport { useExpoRouter } from '../global-state/router-store';\nimport { LinkToOptions } from '../global-state/routing';\nimport { stripGroupSegmentsFromPath } from '../matchers';\nimport { emitDomLinkEvent } from './useDomComponentNavigation';\nimport { appendBaseUrl } from '../fork/getPathFromState-forks';\nimport { shouldLinkExternally } from '../utils/url';\n\nfunction eventShouldPreventDefault(\n  e: MouseEvent<HTMLAnchorElement> | GestureResponderEvent\n): boolean {\n  if (e?.defaultPrevented) {\n    return false;\n  }\n\n  if (\n    // Only check MouseEvents\n    'button' in e &&\n    // ignore clicks with modifier keys\n    !e.metaKey &&\n    !e.altKey &&\n    !e.ctrlKey &&\n    !e.shiftKey &&\n    (e.button == null || e.button === 0) && // Only accept left clicks\n    [undefined, null, '', 'self'].includes(e.currentTarget.target) // let browser handle \"target=_blank\" etc.\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\ntype UseLinkToPathPropsOptions = LinkToOptions & {\n  href: string;\n};\n\nexport default function useLinkToPathProps({ href, ...options }: UseLinkToPathPropsOptions) {\n  const { linkTo } = useExpoRouter();\n\n  const onPress = (event?: MouseEvent<HTMLAnchorElement> | GestureResponderEvent) => {\n    if (shouldHandleMouseEvent(event)) {\n      if (emitDomLinkEvent(href, options)) {\n        return;\n      }\n      linkTo(href, options);\n    }\n  };\n\n  let strippedHref = stripGroupSegmentsFromPath(href) || '/';\n\n  // Append base url only if needed.\n  if (!shouldLinkExternally(strippedHref)) {\n    strippedHref = appendBaseUrl(strippedHref);\n  }\n\n  return {\n    href: strippedHref,\n    role: 'link' as const,\n    onPress,\n  };\n}\n\nexport function shouldHandleMouseEvent(\n  event?: MouseEvent<HTMLAnchorElement> | GestureResponderEvent\n) {\n  if (Platform.OS !== 'web') {\n    return !event?.defaultPrevented;\n  }\n\n  if (event && eventShouldPreventDefault(event)) {\n    event.preventDefault();\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":";;;;;;;;;AAGA,MAAAA,cAAA,GAAAC,OAAA;AAEA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,2BAAA,GAAAF,OAAA;AACA,MAAAG,wBAAA,GAAAH,OAAA;AACA,MAAAI,KAAA,GAAAJ,OAAA;AAEA,SAASK,yBAAyBA,CAChCC,CAAwD;EAExD,IAAIA,CAAC,EAAEC,gBAAgB,EAAE;IACvB,OAAO,KAAK;;EAGd,IAEE,QAAQ,IAAID,CAAC,IAEb,CAACA,CAAC,CAACE,OAAO,IACV,CAACF,CAAC,CAACG,MAAM,IACT,CAACH,CAAC,CAACI,OAAO,IACV,CAACJ,CAAC,CAACK,QAAQ,KACVL,CAAC,CAACM,MAAM,IAAI,IAAI,IAAIN,CAAC,CAACM,MAAM,KAAK,CAAC,CAAC,IACpC,CAACC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACR,CAAC,CAACS,aAAa,CAACC,MAAM,CAAC,EAC9D;IACA,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd;AAMA,SAAwBC,kBAAkBA,CAAAC,IAAA,EAAgD;EAAA,IAA/C;MAAEC;IAAgB,CAA6B,GAAAD,IAAA;IAApCE,OAAO,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;EAC3D,MAAM;IAAEC;EAAM,CAAE,GAAG,IAAAxB,cAAA,CAAAyB,aAAa,GAAE;EAElC,MAAMC,OAAO,GAAIC,KAA6D,IAAI;IAChF,IAAIC,sBAAsB,CAACD,KAAK,CAAC,EAAE;MACjC,IAAI,IAAAxB,2BAAA,CAAA0B,gBAAgB,EAACT,IAAI,EAAEC,OAAO,CAAC,EAAE;QACnC;;MAEFG,MAAM,CAACJ,IAAI,EAAEC,OAAO,CAAC;;EAEzB,CAAC;EAED,IAAIS,YAAY,GAAG,IAAA5B,UAAA,CAAA6B,0BAA0B,EAACX,IAAI,CAAC,IAAI,GAAG;EAG1D,IAAI,CAAC,IAAAf,KAAA,CAAA2B,oBAAoB,EAACF,YAAY,CAAC,EAAE;IACvCA,YAAY,GAAG,IAAA1B,wBAAA,CAAA6B,aAAa,EAACH,YAAY,CAAC;;EAG5C,OAAO;IACLV,IAAI,EAAEU,YAAY;IAClBI,IAAI,EAAE,MAAe;IACrBR;GACD;AACH;AAxBAS,OAAA,CAAAC,OAAA,GAAAlB,kBAAA;AA0BA,SAAgBU,sBAAsBA,CACpCD,KAA6D;EAE7D,IAAIU,cAAA,CAAAC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,OAAO,CAACZ,KAAK,EAAEnB,gBAAgB;;EAGjC,IAAImB,KAAK,IAAIrB,yBAAyB,CAACqB,KAAK,CAAC,EAAE;IAC7CA,KAAK,CAACa,cAAc,EAAE;IACtB,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd;AAbAL,OAAA,CAAAP,sBAAA,GAAAA,sBAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}