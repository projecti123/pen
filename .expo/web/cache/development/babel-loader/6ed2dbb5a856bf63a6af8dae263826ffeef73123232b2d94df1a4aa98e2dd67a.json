{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/views/Navigator.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultNavigator = exports.Slot = exports.useNavigatorContext = exports.Navigator = exports.NavigatorContext = void 0;\nconst native_1 = require(\"@react-navigation/native\");\nconst React = __importStar(require(\"react\"));\nconst react_native_safe_area_context_1 = require(\"react-native-safe-area-context\");\nconst Screen_1 = require(\"./Screen\");\nconst Route_1 = require(\"../Route\");\nconst withLayoutContext_1 = require(\"../layouts/withLayoutContext\");\nconst useScreens_1 = require(\"../useScreens\");\nexports.NavigatorContext = React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  exports.NavigatorContext.displayName = 'NavigatorContext';\n}\nfunction Navigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  router,\n  routerOptions\n}) {\n  const contextKey = (0, Route_1.useContextKey)();\n  const {\n    screens,\n    children: nonScreenChildren\n  } = (0, withLayoutContext_1.useFilterScreenChildren)(children, {\n    isCustomNavigator: true,\n    contextKey\n  });\n  const sortedScreens = (0, useScreens_1.useSortedScreens)(screens ?? []);\n  router ||= native_1.StackRouter;\n  const navigation = (0, native_1.useNavigationBuilder)(router, Object.assign({}, routerOptions, {\n    id: contextKey,\n    children: sortedScreens || [_reactJsxDevRuntime.jsxDEV(Screen_1.Screen, {}, \"default\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }, this)],\n    screenOptions,\n    initialRouteName\n  }));\n  if (!sortedScreens.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n  return _reactJsxDevRuntime.jsxDEV(exports.NavigatorContext.Provider, {\n    value: Object.assign({}, navigation, {\n      contextKey,\n      router\n    }),\n    children: nonScreenChildren\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n}\nexports.Navigator = Navigator;\nfunction useNavigatorContext() {\n  const context = React.useContext(exports.NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\nexports.useNavigatorContext = useNavigatorContext;\nfunction SlotNavigator(props) {\n  const contextKey = (0, Route_1.useContextKey)();\n  const {\n    screens\n  } = (0, withLayoutContext_1.useFilterScreenChildren)([], {\n    contextKey\n  });\n  const {\n    state,\n    descriptors,\n    NavigationContent\n  } = (0, native_1.useNavigationBuilder)(native_1.StackRouter, Object.assign({}, props, {\n    id: contextKey,\n    children: (0, useScreens_1.useSortedScreens)(screens ?? [])\n  }));\n  return _reactJsxDevRuntime.jsxDEV(NavigationContent, {\n    children: descriptors[state.routes[state.index].key].render()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 13\n  }, this);\n}\nfunction Slot(props) {\n  const contextKey = (0, Route_1.useContextKey)();\n  const context = React.useContext(exports.NavigatorContext);\n  if (context?.contextKey !== contextKey) {\n    return _reactJsxDevRuntime.jsxDEV(SlotNavigator, Object.assign({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 16\n    }, this);\n  }\n  return _reactJsxDevRuntime.jsxDEV(NavigatorSlot, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 12\n  }, this);\n}\nexports.Slot = Slot;\nfunction NavigatorSlot() {\n  const context = useNavigatorContext();\n  const {\n    state,\n    descriptors\n  } = context;\n  return descriptors[state.routes[state.index].key]?.render() ?? null;\n}\nfunction DefaultNavigator() {\n  return _reactJsxDevRuntime.jsxDEV(react_native_safe_area_context_1.SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _reactJsxDevRuntime.jsxDEV(SlotNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 13\n  }, this);\n}\nexports.DefaultNavigator = DefaultNavigator;\nNavigator.Slot = NavigatorSlot;\nNavigator.useContext = useNavigatorContext;\nNavigator.Screen = Screen_1.Screen;","map":{"version":3,"names":["native_1","require","React","__importStar","react_native_safe_area_context_1","Screen_1","Route_1","withLayoutContext_1","useScreens_1","exports","NavigatorContext","createContext","process","env","NODE_ENV","displayName","Navigator","initialRouteName","screenOptions","children","router","routerOptions","contextKey","useContextKey","screens","nonScreenChildren","useFilterScreenChildren","isCustomNavigator","sortedScreens","useSortedScreens","StackRouter","navigation","useNavigationBuilder","Object","assign","id","_reactJsxDevRuntime","jsxDEV","Screen","fileName","_jsxFileName","lineNumber","columnNumber","length","console","warn","Provider","value","useNavigatorContext","context","useContext","Error","SlotNavigator","props","state","descriptors","NavigationContent","routes","index","key","render","Slot","NavigatorSlot","DefaultNavigator","SafeAreaView","style","flex"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/views/Navigator.tsx"],"sourcesContent":["// Copyright Â© 2024 650 Industries.\n'use client';\n\nimport { RouterFactory, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { Screen } from './Screen';\nimport { useContextKey } from '../Route';\nimport { useFilterScreenChildren } from '../layouts/withLayoutContext';\nimport { useSortedScreens } from '../useScreens';\n\nexport type NavigatorContextValue = ReturnType<typeof useNavigationBuilder> & {\n  contextKey: string;\n  router: RouterFactory<any, any, any>;\n};\n\nexport const NavigatorContext = React.createContext<NavigatorContextValue | null>(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  NavigatorContext.displayName = 'NavigatorContext';\n}\n\ntype UseNavigationBuilderRouter = Parameters<typeof useNavigationBuilder>[0];\ntype UseNavigationBuilderOptions = Parameters<typeof useNavigationBuilder>[1];\n\nexport type NavigatorProps<T extends UseNavigationBuilderRouter> = {\n  initialRouteName?: UseNavigationBuilderOptions['initialRouteName'];\n  screenOptions?: UseNavigationBuilderOptions['screenOptions'];\n  children?: UseNavigationBuilderOptions['children'];\n  router?: T;\n  routerOptions?: Omit<Parameters<T>[0], 'initialRouteName'>;\n};\n\n/**\n * An unstyled custom navigator. Good for basic web layouts.\n *\n * @hidden\n */\nexport function Navigator<T extends UseNavigationBuilderRouter = typeof StackRouter>({\n  initialRouteName,\n  screenOptions,\n  children,\n  router,\n  routerOptions,\n}: NavigatorProps<T>) {\n  const contextKey = useContextKey();\n\n  // A custom navigator can have a mix of Screen and other components (like a Slot inside a View)\n  const { screens, children: nonScreenChildren } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sortedScreens = useSortedScreens(screens ?? []);\n\n  router ||= StackRouter as unknown as T;\n\n  const navigation = useNavigationBuilder(router, {\n    // Used for getting the parent with navigation.getParent('/normalized/path')\n    ...routerOptions,\n    id: contextKey,\n    children: sortedScreens || [<Screen key=\"default\" />],\n    screenOptions,\n    initialRouteName,\n  });\n\n  // useNavigationBuilder requires at least one screen to be defined otherwise it will throw.\n  if (!sortedScreens.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        ...navigation,\n        contextKey,\n        router,\n      }}>\n      {nonScreenChildren}\n    </NavigatorContext.Provider>\n  );\n}\n\n/**\n * @hidden\n */\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\n\nfunction SlotNavigator(props: NavigatorProps<any>) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens } = useFilterScreenChildren([], {\n    contextKey,\n  });\n\n  const { state, descriptors, NavigationContent } = useNavigationBuilder(StackRouter, {\n    ...props,\n    id: contextKey,\n    children: useSortedScreens(screens ?? []),\n  });\n\n  return (\n    <NavigationContent>{descriptors[state.routes[state.index].key].render()}</NavigationContent>\n  );\n}\n\n/**\n * Renders the currently selected content.\n *\n * There are actually two different implementations of `<Slot/>`:\n *  - Used inside a `_layout` as the `Navigator`\n *  - Used inside a `Navigator` as the content\n *\n * Since a custom `Navigator` will set the `NavigatorContext.contextKey` to\n * the current `_layout`, you can use this to determine if you are inside\n * a custom navigator or not.\n */\nexport function Slot(props: Omit<NavigatorProps<any>, 'children'>) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n\n  if (context?.contextKey !== contextKey) {\n    // The _layout has changed since the last navigator\n    return <SlotNavigator {...props} />;\n  }\n\n  /*\n   * The user has defined a custom navigator\n   * <Navigator><Slot /></Navigator>\n   */\n  return <NavigatorSlot />;\n}\n\n/**\n * Render the current navigator content.\n */\nfunction NavigatorSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  return descriptors[state.routes[state.index].key]?.render() ?? null;\n}\n\n/**\n * The default navigator for the app when no root _layout is provided.\n */\nexport function DefaultNavigator() {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <SlotNavigator />\n    </SafeAreaView>\n  );\n}\n\nNavigator.Slot = NavigatorSlot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}