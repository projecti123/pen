{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"id\", \"initialRouteName\", \"children\", \"layout\", \"screenListeners\", \"screenOptions\", \"screenLayout\", \"UNSTABLE_getStateForRouteNamesChange\"];\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/fork/native-stack/createNativeStackNavigator.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNativeStackNavigator = void 0;\nconst native_1 = require(\"@react-navigation/native\");\nconst native_stack_1 = require(\"@react-navigation/native-stack\");\nconst React = __importStar(require(\"react\"));\nfunction NativeStackNavigator(_ref) {\n  let {\n      id,\n      initialRouteName,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n      screenLayout,\n      UNSTABLE_getStateForRouteNamesChange\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    state,\n    describe,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = (0, native_1.useNavigationBuilder)(native_1.StackRouter, {\n    id,\n    initialRouteName,\n    children,\n    layout,\n    screenListeners,\n    screenOptions,\n    screenLayout,\n    UNSTABLE_getStateForRouteNamesChange\n  });\n  React.useEffect(() => navigation?.addListener?.('tabPress', e => {\n    const isFocused = navigation.isFocused();\n    requestAnimationFrame(() => {\n      if (state.index > 0 && isFocused && !e.defaultPrevented) {\n        navigation.dispatch(Object.assign({}, native_1.StackActions.popToTop(), {\n          target: state.key\n        }));\n      }\n    });\n  }), [navigation, state.index, state.key]);\n  return _reactJsxDevRuntime.jsxDEV(NavigationContent, {\n    children: _reactJsxDevRuntime.jsxDEV(native_stack_1.NativeStackView, Object.assign({}, rest, {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n      describe: describe\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n}\nfunction createNativeStackNavigator(config) {\n  return (0, native_1.createNavigatorFactory)(NativeStackNavigator)(config);\n}\nexports.createNativeStackNavigator = createNativeStackNavigator;","map":{"version":3,"names":["native_1","require","native_stack_1","React","__importStar","NativeStackNavigator","_ref","id","initialRouteName","children","layout","screenListeners","screenOptions","screenLayout","UNSTABLE_getStateForRouteNamesChange","rest","_objectWithoutPropertiesLoose","_excluded","state","describe","descriptors","navigation","NavigationContent","useNavigationBuilder","StackRouter","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","Object","assign","StackActions","popToTop","target","key","_reactJsxDevRuntime","jsxDEV","NativeStackView","fileName","_jsxFileName","lineNumber","columnNumber","createNativeStackNavigator","config","createNavigatorFactory","exports"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/fork/native-stack/createNativeStackNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  type EventArg,\n  type NavigatorTypeBagBase,\n  type ParamListBase,\n  type StackActionHelpers,\n  StackActions,\n  type StackNavigationState,\n  StackRouter,\n  type StackRouterOptions,\n  type StaticConfig,\n  type TypedNavigator,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport {\n  NativeStackNavigatorProps,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  NativeStackView,\n  NativeStackNavigationProp,\n} from '@react-navigation/native-stack';\nimport * as React from 'react';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  layout,\n  screenListeners,\n  screenOptions,\n  screenLayout,\n  UNSTABLE_getStateForRouteNamesChange,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, describe, descriptors, navigation, NavigationContent } = useNavigationBuilder<\n    StackNavigationState<ParamListBase>,\n    StackRouterOptions,\n    StackActionHelpers<ParamListBase>,\n    NativeStackNavigationOptions,\n    NativeStackNavigationEventMap\n  >(StackRouter, {\n    id,\n    initialRouteName,\n    children,\n    layout,\n    screenListeners,\n    screenOptions,\n    screenLayout,\n    UNSTABLE_getStateForRouteNamesChange,\n  });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (state.index > 0 && isFocused && !(e as EventArg<'tabPress', true>).defaultPrevented) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n        describe={describe}\n      />\n    </NavigationContent>\n  );\n}\n\nexport function createNativeStackNavigator<\n  const ParamList extends ParamListBase,\n  const NavigatorID extends string | undefined = undefined,\n  const TypeBag extends NavigatorTypeBagBase = {\n    ParamList: ParamList;\n    NavigatorID: NavigatorID;\n    State: StackNavigationState<ParamList>;\n    ScreenOptions: NativeStackNavigationOptions;\n    EventMap: NativeStackNavigationEventMap;\n    NavigationList: {\n      [RouteName in keyof ParamList]: NativeStackNavigationProp<ParamList, RouteName, NavigatorID>;\n    };\n    Navigator: typeof NativeStackNavigator;\n  },\n  const Config extends StaticConfig<TypeBag> = StaticConfig<TypeBag>,\n>(config?: Config): TypedNavigator<TypeBag, Config> {\n  return createNavigatorFactory(NativeStackNavigator)(config);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAcA,MAAAC,cAAA,GAAAD,OAAA;AAOA,MAAAE,KAAA,GAAAC,YAAA,CAAAH,OAAA;AAEA,SAASI,oBAAoBA,CAAAC,IAAA,EAUD;EAAA,IAVE;MAC5BC,EAAE;MACFC,gBAAgB;MAChBC,QAAQ;MACRC,MAAM;MACNC,eAAe;MACfC,aAAa;MACbC,YAAY;MACZC;IACO,CACmB,GAAAR,IAAA;IADvBS,IAAI,GAAAC,6BAAA,CAAAV,IAAA,EAAAW,SAAA;EAEP,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAiB,CAAE,GAAG,IAAAtB,QAAA,CAAAuB,oBAAoB,EAM1FvB,QAAA,CAAAwB,WAAW,EAAE;IACbjB,EAAE;IACFC,gBAAgB;IAChBC,QAAQ;IACRC,MAAM;IACNC,eAAe;IACfC,aAAa;IACbC,YAAY;IACZC;GACD,CAAC;EAEFX,KAAK,CAACsB,SAAS,CACb,MAEEJ,UAAU,EAAEK,WAAW,GAAG,UAAU,EAAGC,CAAM,IAAI;IAC/C,MAAMC,SAAS,GAAGP,UAAU,CAACO,SAAS,EAAE;IAIxCC,qBAAqB,CAAC,MAAK;MACzB,IAAIX,KAAK,CAACY,KAAK,GAAG,CAAC,IAAIF,SAAS,IAAI,CAAED,CAAgC,CAACI,gBAAgB,EAAE;QAGvFV,UAAU,CAACW,QAAQ,CAAAC,MAAA,CAAAC,MAAA,KACdlC,QAAA,CAAAmC,YAAY,CAACC,QAAQ,EAAE;UAC1BC,MAAM,EAAEnB,KAAK,CAACoB;QAAG,EAClB,CAAC;;IAEN,CAAC,CAAC;EACJ,CAAC,CAAC,EACJ,CAACjB,UAAU,EAAEH,KAAK,CAACY,KAAK,EAAEZ,KAAK,CAACoB,GAAG,CAAC,CACrC;EAED,OACEC,mBAAA,CAAAC,MAAA,CAAClB,iBAAiB;IAAAb,QAAA,EAChB8B,mBAAA,CAAAC,MAAA,CAACtC,cAAA,CAAAuC,eAAe,EAAAR,MAAA,CAAAC,MAAA,KACVnB,IAAI;MACRG,KAAK,EAAEA,KAAM;MACbG,UAAU,EAAEA,UAAW;MACvBD,WAAW,EAAEA,WAAY;MACzBD,QAAQ,EAAEA;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAmB,CAAC;AAExB;AAEA,SAAgBC,0BAA0BA,CAexCC,MAAe;EACf,OAAO,IAAA/C,QAAA,CAAAgD,sBAAsB,EAAC3C,oBAAoB,CAAC,CAAC0C,MAAM,CAAC;AAC7D;AAjBAE,OAAA,CAAAH,0BAAA,GAAAA,0BAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}