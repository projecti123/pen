{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _react = require(\"react\");\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"ErrorBoundary\"],\n  _excluded2 = [\"route\", \"navigation\"],\n  _excluded3 = [\"options\"];\nvar _jsxFileName = \"/Users/tanishakumari/StudySphere/node_modules/expo-router/build/useScreens.js\";\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.routeToScreen = exports.screenOptionsFactory = exports.createGetIdForRoute = exports.getQualifiedRouteComponent = exports.useSortedScreens = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst Route_1 = require(\"./Route\");\nconst import_mode_1 = __importDefault(require(\"./import-mode\"));\nconst primitives_1 = require(\"./primitives\");\nconst EmptyRoute_1 = require(\"./views/EmptyRoute\");\nconst SuspenseFallback_1 = require(\"./views/SuspenseFallback\");\nconst Try_1 = require(\"./views/Try\");\nfunction getSortedChildren(children, order, initialRouteName) {\n  if (!order?.length) {\n    return children.sort((0, Route_1.sortRoutesWithInitial)(initialRouteName)).map(route => ({\n      route,\n      props: {}\n    }));\n  }\n  const entries = [...children];\n  const ordered = order.map(({\n    name,\n    redirect,\n    initialParams,\n    listeners,\n    options,\n    getId\n  }) => {\n    if (!entries.length) {\n      console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n      return null;\n    }\n    const matchIndex = entries.findIndex(child => child.route === name);\n    if (matchIndex === -1) {\n      console.warn(`[Layout children]: No route named \"${name}\" exists in nested children:`, children.map(({\n        route\n      }) => route));\n      return null;\n    } else {\n      const match = entries[matchIndex];\n      entries.splice(matchIndex, 1);\n      if (redirect) {\n        if (typeof redirect === 'string') {\n          throw new Error(`Redirecting to a specific route is not supported yet.`);\n        }\n        return null;\n      }\n      return {\n        route: match,\n        props: {\n          initialParams,\n          listeners,\n          options,\n          getId\n        }\n      };\n    }\n  }).filter(Boolean);\n  ordered.push(...entries.sort((0, Route_1.sortRoutesWithInitial)(initialRouteName)).map(route => ({\n    route,\n    props: {}\n  })));\n  return ordered;\n}\nfunction useSortedScreens(order) {\n  const node = (0, Route_1.useRouteNode)();\n  const sorted = node?.children?.length ? getSortedChildren(node.children, order, node.initialRouteName) : [];\n  return react_1.default.useMemo(() => sorted.map(value => routeToScreen(value.route, value.props)), [sorted]);\n}\nexports.useSortedScreens = useSortedScreens;\nfunction fromImport(_ref) {\n  let {\n      ErrorBoundary\n    } = _ref,\n    component = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (ErrorBoundary) {\n    return {\n      default: react_1.default.forwardRef((props, ref) => {\n        const children = react_1.default.createElement(component.default || EmptyRoute_1.EmptyRoute, Object.assign({}, props, {\n          ref\n        }));\n        return _reactJsxDevRuntime.jsxDEV(Try_1.Try, {\n          catch: ErrorBoundary,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n      })\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof component.default === 'object' && component.default && Object.keys(component.default).length === 0) {\n      return {\n        default: EmptyRoute_1.EmptyRoute\n      };\n    }\n  }\n  return {\n    default: component.default\n  };\n}\nfunction fromLoadedRoute(res) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n  return res.then(fromImport);\n}\nconst qualifiedStore = new WeakMap();\nfunction getQualifiedRouteComponent(value) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value);\n  }\n  let ScreenComponent;\n  if (import_mode_1.default === 'lazy') {\n    ScreenComponent = react_1.default.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(res);\n    });\n  } else {\n    const res = value.loadRoute();\n    const Component = fromImport(res).default;\n    ScreenComponent = react_1.default.forwardRef((props, ref) => {\n      return _reactJsxDevRuntime.jsxDEV(Component, Object.assign({}, props, {\n        ref: ref\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 20\n      }, this);\n    });\n  }\n  const getLoadable = (props, ref) => _reactJsxDevRuntime.jsxDEV(react_1.default.Suspense, {\n    fallback: _reactJsxDevRuntime.jsxDEV(SuspenseFallback_1.SuspenseFallback, {\n      route: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 78\n    }, this),\n    children: _reactJsxDevRuntime.jsxDEV(ScreenComponent, Object.assign({}, Object.assign({}, props, {\n      ref,\n      segment: value.route\n    })), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 42\n  }, this);\n  const QualifiedRoute = react_1.default.forwardRef((_ref2, ref) => {\n    let {\n        route\n      } = _ref2,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n    const loadable = getLoadable(props, ref);\n    return _reactJsxDevRuntime.jsxDEV(Route_1.Route, {\n      node: value,\n      route: route,\n      children: loadable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this);\n  });\n  QualifiedRoute.displayName = `Route(${value.route})`;\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\nexports.getQualifiedRouteComponent = getQualifiedRouteComponent;\nfunction createGetIdForRoute(route) {\n  const include = new Map();\n  if (route.dynamic) {\n    for (const segment of route.dynamic) {\n      include.set(segment.name, segment);\n    }\n  }\n  return ({\n    params = {}\n  } = {}) => {\n    if (params.__EXPO_ROUTER_key) {\n      const key = params.__EXPO_ROUTER_key;\n      delete params.__EXPO_ROUTER_key;\n      return key;\n    }\n    const segments = [];\n    for (const dynamic of include.values()) {\n      const value = params?.[dynamic.name];\n      if (Array.isArray(value) && value.length > 0) {\n        segments.push(value.join('/'));\n      } else if (value && !Array.isArray(value)) {\n        segments.push(value);\n      } else if (dynamic.deep) {\n        segments.push(`[...${dynamic.name}]`);\n      } else {\n        segments.push(`[${dynamic.name}]`);\n      }\n    }\n    return segments.join('/') ?? route.contextKey;\n  };\n}\nexports.createGetIdForRoute = createGetIdForRoute;\nfunction screenOptionsFactory(route, options) {\n  return args => {\n    const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n    const staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n    const output = Object.assign({}, staticResult, dynamicResult);\n    if (route.generated) {\n      output.tabBarItemStyle = {\n        display: 'none'\n      };\n      output.tabBarButton = () => null;\n      output.drawerItemStyle = {\n        height: 0,\n        display: 'none'\n      };\n    }\n    return output;\n  };\n}\nexports.screenOptionsFactory = screenOptionsFactory;\nfunction routeToScreen(route, _ref3 = {}) {\n  let {\n      options\n    } = _ref3,\n    props = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n  return _react.createElement(primitives_1.Screen, Object.assign({\n    getId: createGetIdForRoute(route)\n  }, props, {\n    name: route.route,\n    key: route.route,\n    options: screenOptionsFactory(route, options),\n    getComponent: () => getQualifiedRouteComponent(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }));\n}\nexports.routeToScreen = routeToScreen;","map":{"version":3,"names":["react_1","__importDefault","require","Route_1","import_mode_1","primitives_1","EmptyRoute_1","SuspenseFallback_1","Try_1","getSortedChildren","children","order","initialRouteName","length","sort","sortRoutesWithInitial","map","route","props","entries","ordered","name","redirect","initialParams","listeners","options","getId","console","warn","matchIndex","findIndex","child","match","splice","Error","filter","Boolean","push","useSortedScreens","node","useRouteNode","sorted","default","useMemo","value","routeToScreen","exports","fromImport","_ref","ErrorBoundary","component","_objectWithoutPropertiesLoose","_excluded","forwardRef","ref","createElement","EmptyRoute","Object","assign","_reactJsxDevRuntime","jsxDEV","Try","catch","fileName","_jsxFileName","lineNumber","columnNumber","process","env","NODE_ENV","keys","fromLoadedRoute","res","Promise","then","qualifiedStore","WeakMap","getQualifiedRouteComponent","has","get","ScreenComponent","lazy","loadRoute","Component","getLoadable","Suspense","fallback","SuspenseFallback","segment","QualifiedRoute","_ref2","_excluded2","loadable","Route","displayName","set","createGetIdForRoute","include","Map","dynamic","params","__EXPO_ROUTER_key","key","segments","values","Array","isArray","join","deep","contextKey","screenOptionsFactory","args","staticOptions","generated","getNavOptions","staticResult","dynamicResult","output","tabBarItemStyle","display","tabBarButton","drawerItemStyle","height","_ref3","_excluded3","_react","Screen","getComponent","__self","__source"],"sources":["/Users/tanishakumari/StudySphere/node_modules/expo-router/src/useScreens.tsx"],"sourcesContent":["'use client';\n\nimport type {\n  EventMapBase,\n  NavigationState,\n  ParamListBase,\n  RouteConfig,\n  RouteProp,\n  ScreenListeners,\n} from '@react-navigation/native';\nimport React from 'react';\n\nimport {\n  DynamicConvention,\n  LoadedRoute,\n  Route,\n  RouteNode,\n  sortRoutesWithInitial,\n  useRouteNode,\n} from './Route';\nimport EXPO_ROUTER_IMPORT_MODE from './import-mode';\nimport { Screen } from './primitives';\nimport { EmptyRoute } from './views/EmptyRoute';\nimport { SuspenseFallback } from './views/SuspenseFallback';\nimport { Try } from './views/Try';\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>,\n  TState extends NavigationState = NavigationState,\n  TEventMap extends EventMapBase = EventMapBase,\n> = {\n  /** Name is required when used inside a Layout component. */\n  name?: string;\n  /**\n   * Redirect to the nearest sibling route.\n   * If all children are `redirect={true}`, the layout will render `null` as there are no children to render.\n   */\n  redirect?: boolean;\n  initialParams?: Record<string, any>;\n  options?:\n    | TOptions\n    | ((prop: { route: RouteProp<ParamListBase, string>; navigation: any }) => TOptions);\n\n  listeners?:\n    | ScreenListeners<TState, TEventMap>\n    | ((prop: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenListeners<TState, TEventMap>);\n\n  getId?: ({ params }: { params?: Record<string, any> }) => string | undefined;\n};\n\nfunction getSortedChildren(\n  children: RouteNode[],\n  order?: ScreenProps[],\n  initialRouteName?: string\n): { route: RouteNode; props: Partial<ScreenProps> }[] {\n  if (!order?.length) {\n    return children\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }));\n  }\n  const entries = [...children];\n\n  const ordered = order\n    .map(({ name, redirect, initialParams, listeners, options, getId }) => {\n      if (!entries.length) {\n        console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n        return null;\n      }\n      const matchIndex = entries.findIndex((child) => child.route === name);\n      if (matchIndex === -1) {\n        console.warn(\n          `[Layout children]: No route named \"${name}\" exists in nested children:`,\n          children.map(({ route }) => route)\n        );\n        return null;\n      } else {\n        // Get match and remove from entries\n        const match = entries[matchIndex];\n        entries.splice(matchIndex, 1);\n\n        // Ensure to return null after removing from entries.\n        if (redirect) {\n          if (typeof redirect === 'string') {\n            throw new Error(`Redirecting to a specific route is not supported yet.`);\n          }\n          return null;\n        }\n\n        return {\n          route: match,\n          props: { initialParams, listeners, options, getId },\n        };\n      }\n    })\n    .filter(Boolean) as {\n    route: RouteNode;\n    props: Partial<ScreenProps>;\n  }[];\n\n  // Add any remaining children\n  ordered.push(\n    ...entries.sort(sortRoutesWithInitial(initialRouteName)).map((route) => ({ route, props: {} }))\n  );\n\n  return ordered;\n}\n\n/**\n * @returns React Navigation screens sorted by the `route` property.\n */\nexport function useSortedScreens(order: ScreenProps[]): React.ReactNode[] {\n  const node = useRouteNode();\n\n  const sorted = node?.children?.length\n    ? getSortedChildren(node.children, order, node.initialRouteName)\n    : [];\n  return React.useMemo(\n    () => sorted.map((value) => routeToScreen(value.route, value.props)),\n    [sorted]\n  );\n}\n\nfunction fromImport({ ErrorBoundary, ...component }: LoadedRoute) {\n  if (ErrorBoundary) {\n    return {\n      default: React.forwardRef((props: any, ref: any) => {\n        const children = React.createElement(component.default || EmptyRoute, {\n          ...props,\n          ref,\n        });\n        return <Try catch={ErrorBoundary}>{children}</Try>;\n      }),\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      typeof component.default === 'object' &&\n      component.default &&\n      Object.keys(component.default).length === 0\n    ) {\n      return { default: EmptyRoute };\n    }\n  }\n\n  return { default: component.default };\n}\n\nfunction fromLoadedRoute(res: LoadedRoute) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n\n  return res.then(fromImport);\n}\n\n// TODO: Maybe there's a more React-y way to do this?\n// Without this store, the process enters a recursive loop.\nconst qualifiedStore = new WeakMap<RouteNode, React.ComponentType<any>>();\n\n/** Wrap the component with various enhancements and add access to child routes. */\nexport function getQualifiedRouteComponent(value: RouteNode) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value)!;\n  }\n\n  let ScreenComponent: React.ForwardRefExoticComponent<React.RefAttributes<unknown>>;\n\n  // TODO: This ensures sync doesn't use React.lazy, but it's not ideal.\n  if (EXPO_ROUTER_IMPORT_MODE === 'lazy') {\n    ScreenComponent = React.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(res) as Promise<{\n        default: React.ComponentType<any>;\n      }>;\n    });\n  } else {\n    const res = value.loadRoute();\n    const Component = fromImport(res).default as React.ComponentType<any>;\n    ScreenComponent = React.forwardRef((props, ref) => {\n      return <Component {...props} ref={ref} />;\n    });\n  }\n\n  const getLoadable = (props: any, ref: any) => (\n    <React.Suspense fallback={<SuspenseFallback route={value} />}>\n      <ScreenComponent\n        {...{\n          ...props,\n          ref,\n          // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n          // the intention is to make it possible to deduce shared routes.\n          segment: value.route,\n        }}\n      />\n    </React.Suspense>\n  );\n\n  const QualifiedRoute = React.forwardRef(\n    (\n      {\n        // Remove these React Navigation props to\n        // enforce usage of expo-router hooks (where the query params are correct).\n        route,\n        navigation,\n\n        // Pass all other props to the component\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const loadable = getLoadable(props, ref);\n\n      return (\n        <Route node={value} route={route}>\n          {loadable}\n        </Route>\n      );\n    }\n  );\n\n  QualifiedRoute.displayName = `Route(${value.route})`;\n\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\n\n/** @returns a function which provides a screen id that matches the dynamic route name in params. */\nexport function createGetIdForRoute(\n  route: Pick<RouteNode, 'dynamic' | 'route' | 'contextKey' | 'children'>\n) {\n  const include = new Map<string, DynamicConvention>();\n\n  if (route.dynamic) {\n    for (const segment of route.dynamic) {\n      include.set(segment.name, segment);\n    }\n  }\n\n  return ({ params = {} } = {} as { params?: Record<string, any> }) => {\n    if (params.__EXPO_ROUTER_key) {\n      const key = params.__EXPO_ROUTER_key;\n      delete params.__EXPO_ROUTER_key;\n      return key;\n    }\n\n    const segments: string[] = [];\n\n    for (const dynamic of include.values()) {\n      const value = params?.[dynamic.name];\n      if (Array.isArray(value) && value.length > 0) {\n        // If we are an array with a value\n        segments.push(value.join('/'));\n      } else if (value && !Array.isArray(value)) {\n        // If we have a value and not an empty array\n        segments.push(value);\n      } else if (dynamic.deep) {\n        segments.push(`[...${dynamic.name}]`);\n      } else {\n        segments.push(`[${dynamic.name}]`);\n      }\n    }\n\n    return segments.join('/') ?? route.contextKey;\n  };\n}\n\nexport function screenOptionsFactory(\n  route: RouteNode,\n  options?: ScreenProps['options']\n): RouteConfig<any, any, any, any, any, any>['options'] {\n  return (args) => {\n    // Only eager load generated components\n    const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n    const staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n    const output = {\n      ...staticResult,\n      ...dynamicResult,\n    };\n\n    // Prevent generated screens from showing up in the tab bar.\n    if (route.generated) {\n      output.tabBarItemStyle = { display: 'none' };\n      output.tabBarButton = () => null;\n      // TODO: React Navigation doesn't provide a way to prevent rendering the drawer item.\n      output.drawerItemStyle = { height: 0, display: 'none' };\n    }\n\n    return output;\n  };\n}\n\nexport function routeToScreen(route: RouteNode, { options, ...props }: Partial<ScreenProps> = {}) {\n  return (\n    <Screen\n      // Users can override the screen getId function.\n      getId={createGetIdForRoute(route)}\n      {...props}\n      name={route.route}\n      key={route.route}\n      options={screenOptionsFactory(route, options)}\n      getComponent={() => getQualifiedRouteComponent(route)}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}