plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.facebook.react"
}

def enableProguardInReleaseBuilds = true

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    root = file("../")
    entryFile = file("../index.js")
    cliFile = file("../node_modules/@expo/cli")
    bundleCommand = "export:embed"
}

/**
 * Set this to true to create three separate APKs instead of one:
 *   - A universal APK that works on all devices
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on their device.
 */
def enableSeparateBuildPerCPUArchitecture = true

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace 'com.pentalk.app'
    defaultConfig {
        applicationId 'com.pentalk.app'
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('release.keystore')
            storePassword 'pentalk'
            keyAlias 'pentalk'
            keyPassword 'pentalk'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // https://developer.android.com/studio/build/configure-apk-splits.html
            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
            }
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:hermes-android")

    implementation("androidx.core:core-ktx:$rootProject.ext.androidXCore")
    implementation("androidx.appcompat:appcompat:$rootProject.ext.androidXAppCompat")
    implementation("com.google.android.material:material:$rootProject.ext.androidXMaterial")
    implementation("com.google.android.gms:play-services-ads:$rootProject.ext.playServicesAdsVersion")

    debugImplementation("com.facebook.flipper:flipper:$rootProject.ext.flipperVersion")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:$rootProject.ext.flipperVersion")
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:$rootProject.ext.flipperVersion")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
